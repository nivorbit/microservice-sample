{
  "main": {
    "stream_route": {
      "type": "object",
      "properties": {
        "server_addr": {
          "description": "server IP",
          "type": "string",
          "anyOf": [
            { "title": "IPv4", "type": "string", "format": "ipv4" },
            {
              "title": "IPv4/CIDR",
              "type": "string",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
            },
            { "title": "IPv6", "type": "string", "format": "ipv6" },
            {
              "title": "IPv6/CIDR",
              "type": "string",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
            }
          ]
        },
        "server_port": { "description": "server port", "type": "integer" },
        "upstream": {
          "properties": {
            "checks": {
              "properties": {
                "passive": {
                  "properties": {
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "http_failures": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        },
                        "tcp_failures": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        },
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [429, 500, 503]
                        },
                        "timeouts": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 7
                        }
                      }
                    },
                    "type": {
                      "enum": ["http", "https", "tcp"],
                      "type": "string",
                      "default": "http"
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [
                            200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
                            300, 301, 302, 303, 304, 305, 306, 307, 308
                          ]
                        },
                        "successes": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        }
                      }
                    }
                  },
                  "type": "object",
                  "default": {
                    "unhealthy": {
                      "http_failures": 0,
                      "tcp_failures": 0,
                      "http_statuses": [429, 500, 503],
                      "timeouts": 0
                    },
                    "type": "http",
                    "healthy": {
                      "http_statuses": [
                        200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300,
                        301, 302, 303, 304, 305, 306, 307, 308
                      ],
                      "successes": 0
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "timeout": { "type": "number", "default": 1 },
                    "http_path": { "type": "string", "default": "/" },
                    "host": {
                      "type": "string",
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                    },
                    "port": {
                      "minimum": 1,
                      "type": "integer",
                      "maximum": 65535
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [200, 302]
                        },
                        "interval": {
                          "minimum": 1,
                          "type": "integer",
                          "default": 1
                        },
                        "successes": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        }
                      }
                    },
                    "req_headers": {
                      "minItems": 1,
                      "type": "array",
                      "items": { "type": "string", "uniqueItems": true }
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "timeouts": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 3
                        },
                        "http_failures": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        },
                        "tcp_failures": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        },
                        "interval": {
                          "minimum": 1,
                          "type": "integer",
                          "default": 1
                        },
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [429, 404, 500, 501, 502, 503, 504, 505]
                        }
                      }
                    },
                    "concurrency": { "type": "integer", "default": 10 },
                    "https_verify_certificate": {
                      "type": "boolean",
                      "default": true
                    },
                    "type": {
                      "enum": ["http", "https", "tcp"],
                      "type": "string",
                      "default": "http"
                    }
                  }
                }
              },
              "type": "object",
              "anyOf": [
                { "required": ["active"] },
                { "required": ["active", "passive"] }
              ]
            },
            "type": {
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": { "type": "integer" },
            "retries": { "type": "integer", "minimum": 0 },
            "retry_timeout": { "type": "number", "minimum": 0 },
            "tls": {
              "required": ["client_cert", "client_key"],
              "properties": {
                "client_cert": {
                  "maxLength": 65536,
                  "type": "string",
                  "minLength": 128
                },
                "client_key": {
                  "maxLength": 65536,
                  "type": "string",
                  "minLength": 128
                }
              },
              "type": "object"
            },
            "hash_on": {
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string",
              "default": "vars"
            },
            "pass_host": {
              "description": "mod of host passing",
              "enum": ["pass", "node", "rewrite"],
              "type": "string",
              "default": "pass"
            },
            "upstream_host": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
            },
            "update_time": { "type": "integer" },
            "keepalive_pool": {
              "type": "object",
              "properties": {
                "size": { "minimum": 1, "type": "integer", "default": 320 },
                "idle_timeout": {
                  "minimum": 0,
                  "type": "number",
                  "default": 60
                },
                "requests": { "minimum": 1, "type": "integer", "default": 1000 }
              }
            },
            "timeout": {
              "required": ["connect", "send", "read"],
              "properties": {
                "send": { "type": "number", "exclusiveMinimum": 0 },
                "read": { "type": "number", "exclusiveMinimum": 0 },
                "connect": { "type": "number", "exclusiveMinimum": 0 }
              },
              "type": "object"
            },
            "labels": {
              "description": "key/value pairs to specify attributes",
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "minLength": 1,
                  "description": "value of label",
                  "pattern": "^\\S+$",
                  "maxLength": 64
                }
              }
            },
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "discovery_args": {
              "type": "object",
              "properties": {
                "group_name": { "description": "group name", "type": "string" },
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                }
              }
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "service_name": {
              "maxLength": 256,
              "type": "string",
              "minLength": 1
            },
            "id": {
              "anyOf": [
                {
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string",
                  "minLength": 1
                },
                { "type": "integer", "minimum": 1 }
              ]
            },
            "desc": { "type": "string", "maxLength": 256 },
            "name": { "maxLength": 100, "type": "string", "minLength": 1 },
            "nodes": {
              "anyOf": [
                {
                  "type": "object",
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "required": ["host", "port", "weight"],
                    "properties": {
                      "weight": {
                        "description": "weight of node",
                        "type": "integer",
                        "minimum": 0
                      },
                      "port": {
                        "description": "port of node",
                        "type": "integer",
                        "minimum": 1
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                      },
                      "priority": {
                        "description": "priority of node",
                        "type": "integer",
                        "default": 0
                      }
                    },
                    "type": "object"
                  }
                }
              ]
            },
            "scheme": {
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
              "default": "http"
            }
          },
          "type": "object",
          "oneOf": [
            { "required": ["type", "nodes"] },
            { "required": ["type", "service_name", "discovery_type"] }
          ]
        },
        "sni": {
          "description": "server name indication",
          "type": "string",
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
        },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "upstream_id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "protocol": {
          "required": ["name"],
          "properties": {
            "name": { "type": "string" },
            "logger": {
              "type": "array",
              "items": {
                "dependencies": { "name": ["conf"] },
                "properties": {
                  "name": { "type": "string" },
                  "conf": {
                    "description": "logger plugin configuration",
                    "type": "object"
                  },
                  "filter": {
                    "description": "logger filter rules",
                    "type": "array"
                  }
                }
              }
            },
            "conf": {
              "description": "protocol-specific configuration",
              "type": "object"
            },
            "superior_id": {
              "anyOf": [
                {
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string",
                  "minLength": 1
                },
                { "type": "integer", "minimum": 1 }
              ]
            }
          },
          "type": "object"
        },
        "plugins": { "type": "object" },
        "desc": { "type": "string", "maxLength": 256 },
        "update_time": { "type": "integer" },
        "remote_addr": {
          "description": "client IP",
          "type": "string",
          "anyOf": [
            { "title": "IPv4", "type": "string", "format": "ipv4" },
            {
              "title": "IPv4/CIDR",
              "type": "string",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
            },
            { "title": "IPv6", "type": "string", "format": "ipv6" },
            {
              "title": "IPv6/CIDR",
              "type": "string",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
            }
          ]
        },
        "create_time": { "type": "integer" }
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "name": { "maxLength": 100, "type": "string", "minLength": 1 },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string",
              "minLength": 1,
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64
            }
          }
        },
        "upstream": {
          "properties": {
            "checks": {
              "properties": {
                "passive": {
                  "properties": {
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "http_failures": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        },
                        "tcp_failures": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        },
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [429, 500, 503]
                        },
                        "timeouts": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 7
                        }
                      }
                    },
                    "type": {
                      "enum": ["http", "https", "tcp"],
                      "type": "string",
                      "default": "http"
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [
                            200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
                            300, 301, 302, 303, 304, 305, 306, 307, 308
                          ]
                        },
                        "successes": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        }
                      }
                    }
                  },
                  "type": "object",
                  "default": {
                    "unhealthy": {
                      "http_failures": 0,
                      "tcp_failures": 0,
                      "http_statuses": [429, 500, 503],
                      "timeouts": 0
                    },
                    "type": "http",
                    "healthy": {
                      "http_statuses": [
                        200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300,
                        301, 302, 303, 304, 305, 306, 307, 308
                      ],
                      "successes": 0
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "timeout": { "type": "number", "default": 1 },
                    "http_path": { "type": "string", "default": "/" },
                    "host": {
                      "type": "string",
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                    },
                    "port": {
                      "minimum": 1,
                      "type": "integer",
                      "maximum": 65535
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [200, 302]
                        },
                        "interval": {
                          "minimum": 1,
                          "type": "integer",
                          "default": 1
                        },
                        "successes": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        }
                      }
                    },
                    "req_headers": {
                      "minItems": 1,
                      "type": "array",
                      "items": { "type": "string", "uniqueItems": true }
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "timeouts": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 3
                        },
                        "http_failures": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        },
                        "tcp_failures": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        },
                        "interval": {
                          "minimum": 1,
                          "type": "integer",
                          "default": 1
                        },
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [429, 404, 500, 501, 502, 503, 504, 505]
                        }
                      }
                    },
                    "concurrency": { "type": "integer", "default": 10 },
                    "https_verify_certificate": {
                      "type": "boolean",
                      "default": true
                    },
                    "type": {
                      "enum": ["http", "https", "tcp"],
                      "type": "string",
                      "default": "http"
                    }
                  }
                }
              },
              "type": "object",
              "anyOf": [
                { "required": ["active"] },
                { "required": ["active", "passive"] }
              ]
            },
            "type": {
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": { "type": "integer" },
            "retries": { "type": "integer", "minimum": 0 },
            "retry_timeout": { "type": "number", "minimum": 0 },
            "tls": {
              "required": ["client_cert", "client_key"],
              "properties": {
                "client_cert": {
                  "maxLength": 65536,
                  "type": "string",
                  "minLength": 128
                },
                "client_key": {
                  "maxLength": 65536,
                  "type": "string",
                  "minLength": 128
                }
              },
              "type": "object"
            },
            "hash_on": {
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string",
              "default": "vars"
            },
            "pass_host": {
              "description": "mod of host passing",
              "enum": ["pass", "node", "rewrite"],
              "type": "string",
              "default": "pass"
            },
            "upstream_host": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
            },
            "update_time": { "type": "integer" },
            "keepalive_pool": {
              "type": "object",
              "properties": {
                "size": { "minimum": 1, "type": "integer", "default": 320 },
                "idle_timeout": {
                  "minimum": 0,
                  "type": "number",
                  "default": 60
                },
                "requests": { "minimum": 1, "type": "integer", "default": 1000 }
              }
            },
            "timeout": {
              "required": ["connect", "send", "read"],
              "properties": {
                "send": { "type": "number", "exclusiveMinimum": 0 },
                "read": { "type": "number", "exclusiveMinimum": 0 },
                "connect": { "type": "number", "exclusiveMinimum": 0 }
              },
              "type": "object"
            },
            "labels": {
              "description": "key/value pairs to specify attributes",
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "minLength": 1,
                  "description": "value of label",
                  "pattern": "^\\S+$",
                  "maxLength": 64
                }
              }
            },
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "discovery_args": {
              "type": "object",
              "properties": {
                "group_name": { "description": "group name", "type": "string" },
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                }
              }
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "service_name": {
              "maxLength": 256,
              "type": "string",
              "minLength": 1
            },
            "id": {
              "anyOf": [
                {
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string",
                  "minLength": 1
                },
                { "type": "integer", "minimum": 1 }
              ]
            },
            "desc": { "type": "string", "maxLength": 256 },
            "name": { "maxLength": 100, "type": "string", "minLength": 1 },
            "nodes": {
              "anyOf": [
                {
                  "type": "object",
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "required": ["host", "port", "weight"],
                    "properties": {
                      "weight": {
                        "description": "weight of node",
                        "type": "integer",
                        "minimum": 0
                      },
                      "port": {
                        "description": "port of node",
                        "type": "integer",
                        "minimum": 1
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                      },
                      "priority": {
                        "description": "priority of node",
                        "type": "integer",
                        "default": 0
                      }
                    },
                    "type": "object"
                  }
                }
              ]
            },
            "scheme": {
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
              "default": "http"
            }
          },
          "type": "object",
          "oneOf": [
            { "required": ["type", "nodes"] },
            { "required": ["type", "service_name", "discovery_type"] }
          ]
        },
        "upstream_id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "enable_websocket": {
          "description": "enable websocket for request",
          "type": "boolean"
        },
        "hosts": {
          "uniqueItems": true,
          "minItems": 1,
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
          }
        },
        "plugins": { "type": "object" },
        "desc": { "type": "string", "maxLength": 256 },
        "script": { "maxLength": 102400, "type": "string", "minLength": 10 },
        "update_time": { "type": "integer" },
        "create_time": { "type": "integer" }
      }
    },
    "route": {
      "type": "object",
      "not": {
        "anyOf": [
          { "required": ["script", "plugins"] },
          { "required": ["script", "plugin_config_id"] }
        ]
      },
      "properties": {
        "name": { "maxLength": 100, "type": "string", "minLength": 1 },
        "uri": { "maxLength": 4096, "type": "string", "minLength": 1 },
        "host": { "type": "string", "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$" },
        "create_time": { "type": "integer" },
        "upstream_id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "uris": {
          "uniqueItems": true,
          "minItems": 1,
          "type": "array",
          "items": { "description": "HTTP uri", "type": "string" }
        },
        "enable_websocket": {
          "description": "enable websocket for request",
          "type": "boolean"
        },
        "methods": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "description": "HTTP method",
            "type": "string",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE",
              "PATCH",
              "HEAD",
              "OPTIONS",
              "CONNECT",
              "TRACE",
              "PURGE"
            ]
          }
        },
        "hosts": {
          "uniqueItems": true,
          "minItems": 1,
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
          }
        },
        "vars": { "type": "array" },
        "filter_func": {
          "pattern": "^function",
          "type": "string",
          "minLength": 10
        },
        "update_time": { "type": "integer" },
        "script_id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "timeout": {
          "required": ["connect", "send", "read"],
          "properties": {
            "send": { "type": "number", "exclusiveMinimum": 0 },
            "read": { "type": "number", "exclusiveMinimum": 0 },
            "connect": { "type": "number", "exclusiveMinimum": 0 }
          },
          "type": "object"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string",
              "minLength": 1,
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64
            }
          }
        },
        "upstream": {
          "properties": {
            "checks": {
              "properties": {
                "passive": {
                  "properties": {
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "http_failures": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        },
                        "tcp_failures": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        },
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [429, 500, 503]
                        },
                        "timeouts": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 7
                        }
                      }
                    },
                    "type": {
                      "enum": ["http", "https", "tcp"],
                      "type": "string",
                      "default": "http"
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [
                            200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
                            300, 301, 302, 303, 304, 305, 306, 307, 308
                          ]
                        },
                        "successes": {
                          "minimum": 0,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        }
                      }
                    }
                  },
                  "type": "object",
                  "default": {
                    "unhealthy": {
                      "http_failures": 0,
                      "tcp_failures": 0,
                      "http_statuses": [429, 500, 503],
                      "timeouts": 0
                    },
                    "type": "http",
                    "healthy": {
                      "http_statuses": [
                        200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300,
                        301, 302, 303, 304, 305, 306, 307, 308
                      ],
                      "successes": 0
                    }
                  }
                },
                "active": {
                  "type": "object",
                  "properties": {
                    "timeout": { "type": "number", "default": 1 },
                    "http_path": { "type": "string", "default": "/" },
                    "host": {
                      "type": "string",
                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                    },
                    "port": {
                      "minimum": 1,
                      "type": "integer",
                      "maximum": 65535
                    },
                    "healthy": {
                      "type": "object",
                      "properties": {
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [200, 302]
                        },
                        "interval": {
                          "minimum": 1,
                          "type": "integer",
                          "default": 1
                        },
                        "successes": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        }
                      }
                    },
                    "req_headers": {
                      "minItems": 1,
                      "type": "array",
                      "items": { "type": "string", "uniqueItems": true }
                    },
                    "unhealthy": {
                      "type": "object",
                      "properties": {
                        "timeouts": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 3
                        },
                        "http_failures": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 5
                        },
                        "tcp_failures": {
                          "minimum": 1,
                          "maximum": 254,
                          "type": "integer",
                          "default": 2
                        },
                        "interval": {
                          "minimum": 1,
                          "type": "integer",
                          "default": 1
                        },
                        "http_statuses": {
                          "minItems": 1,
                          "uniqueItems": true,
                          "type": "array",
                          "items": {
                            "minimum": 200,
                            "type": "integer",
                            "maximum": 599
                          },
                          "default": [429, 404, 500, 501, 502, 503, 504, 505]
                        }
                      }
                    },
                    "concurrency": { "type": "integer", "default": 10 },
                    "https_verify_certificate": {
                      "type": "boolean",
                      "default": true
                    },
                    "type": {
                      "enum": ["http", "https", "tcp"],
                      "type": "string",
                      "default": "http"
                    }
                  }
                }
              },
              "type": "object",
              "anyOf": [
                { "required": ["active"] },
                { "required": ["active", "passive"] }
              ]
            },
            "type": {
              "description": "algorithms of load balancing",
              "type": "string"
            },
            "create_time": { "type": "integer" },
            "retries": { "type": "integer", "minimum": 0 },
            "retry_timeout": { "type": "number", "minimum": 0 },
            "tls": {
              "required": ["client_cert", "client_key"],
              "properties": {
                "client_cert": {
                  "maxLength": 65536,
                  "type": "string",
                  "minLength": 128
                },
                "client_key": {
                  "maxLength": 65536,
                  "type": "string",
                  "minLength": 128
                }
              },
              "type": "object"
            },
            "hash_on": {
              "enum": [
                "vars",
                "header",
                "cookie",
                "consumer",
                "vars_combinations"
              ],
              "type": "string",
              "default": "vars"
            },
            "pass_host": {
              "description": "mod of host passing",
              "enum": ["pass", "node", "rewrite"],
              "type": "string",
              "default": "pass"
            },
            "upstream_host": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
            },
            "update_time": { "type": "integer" },
            "keepalive_pool": {
              "type": "object",
              "properties": {
                "size": { "minimum": 1, "type": "integer", "default": 320 },
                "idle_timeout": {
                  "minimum": 0,
                  "type": "number",
                  "default": 60
                },
                "requests": { "minimum": 1, "type": "integer", "default": 1000 }
              }
            },
            "timeout": {
              "required": ["connect", "send", "read"],
              "properties": {
                "send": { "type": "number", "exclusiveMinimum": 0 },
                "read": { "type": "number", "exclusiveMinimum": 0 },
                "connect": { "type": "number", "exclusiveMinimum": 0 }
              },
              "type": "object"
            },
            "labels": {
              "description": "key/value pairs to specify attributes",
              "type": "object",
              "patternProperties": {
                ".*": {
                  "type": "string",
                  "minLength": 1,
                  "description": "value of label",
                  "pattern": "^\\S+$",
                  "maxLength": 64
                }
              }
            },
            "discovery_type": {
              "description": "discovery type",
              "type": "string"
            },
            "discovery_args": {
              "type": "object",
              "properties": {
                "group_name": { "description": "group name", "type": "string" },
                "namespace_id": {
                  "description": "namespace id",
                  "type": "string"
                }
              }
            },
            "key": {
              "description": "the key of chash for dynamic load balancing",
              "type": "string"
            },
            "service_name": {
              "maxLength": 256,
              "type": "string",
              "minLength": 1
            },
            "id": {
              "anyOf": [
                {
                  "maxLength": 64,
                  "pattern": "^[a-zA-Z0-9-_.]+$",
                  "type": "string",
                  "minLength": 1
                },
                { "type": "integer", "minimum": 1 }
              ]
            },
            "desc": { "type": "string", "maxLength": 256 },
            "name": { "maxLength": 100, "type": "string", "minLength": 1 },
            "nodes": {
              "anyOf": [
                {
                  "type": "object",
                  "patternProperties": {
                    ".*": {
                      "description": "weight of node",
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                },
                {
                  "type": "array",
                  "items": {
                    "required": ["host", "port", "weight"],
                    "properties": {
                      "weight": {
                        "description": "weight of node",
                        "type": "integer",
                        "minimum": 0
                      },
                      "port": {
                        "description": "port of node",
                        "type": "integer",
                        "minimum": 1
                      },
                      "metadata": {
                        "description": "metadata of node",
                        "type": "object"
                      },
                      "host": {
                        "type": "string",
                        "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                      },
                      "priority": {
                        "description": "priority of node",
                        "type": "integer",
                        "default": 0
                      }
                    },
                    "type": "object"
                  }
                }
              ]
            },
            "scheme": {
              "enum": [
                "grpc",
                "grpcs",
                "http",
                "https",
                "tcp",
                "tls",
                "udp",
                "kafka"
              ],
              "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
              "default": "http"
            }
          },
          "type": "object",
          "oneOf": [
            { "required": ["type", "nodes"] },
            { "required": ["type", "service_name", "discovery_type"] }
          ]
        },
        "status": {
          "description": "route status, 1 to enable, 0 to disable",
          "enum": [1, 0],
          "type": "integer",
          "default": 1
        },
        "service_protocol": { "enum": ["grpc", "http"] },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "service_id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "plugin_config_id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "remote_addrs": {
          "uniqueItems": true,
          "minItems": 1,
          "type": "array",
          "items": {
            "description": "client IP",
            "type": "string",
            "anyOf": [
              { "title": "IPv4", "type": "string", "format": "ipv4" },
              {
                "title": "IPv4/CIDR",
                "type": "string",
                "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
              },
              { "title": "IPv6", "type": "string", "format": "ipv6" },
              {
                "title": "IPv6/CIDR",
                "type": "string",
                "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
              }
            ]
          }
        },
        "plugins": { "type": "object" },
        "desc": { "type": "string", "maxLength": 256 },
        "script": { "maxLength": 102400, "type": "string", "minLength": 10 },
        "remote_addr": {
          "description": "client IP",
          "type": "string",
          "anyOf": [
            { "title": "IPv4", "type": "string", "format": "ipv4" },
            {
              "title": "IPv4/CIDR",
              "type": "string",
              "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
            },
            { "title": "IPv6", "type": "string", "format": "ipv6" },
            {
              "title": "IPv6/CIDR",
              "type": "string",
              "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
            }
          ]
        },
        "priority": { "type": "integer", "default": 0 }
      },
      "anyOf": [
        { "required": ["plugins", "uri"] },
        { "required": ["upstream", "uri"] },
        { "required": ["upstream_id", "uri"] },
        { "required": ["service_id", "uri"] },
        { "required": ["plugins", "uris"] },
        { "required": ["upstream", "uris"] },
        { "required": ["upstream_id", "uris"] },
        { "required": ["service_id", "uris"] },
        { "required": ["script", "uri"] },
        { "required": ["script", "uris"] }
      ],
      "allOf": [
        { "oneOf": [{ "required": ["uri"] }, { "required": ["uris"] }] },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [{ "required": ["host"] }, { "required": ["hosts"] }]
              }
            },
            { "required": ["host"] },
            { "required": ["hosts"] }
          ]
        },
        {
          "oneOf": [
            {
              "not": {
                "anyOf": [
                  { "required": ["remote_addr"] },
                  { "required": ["remote_addrs"] }
                ]
              }
            },
            { "required": ["remote_addr"] },
            { "required": ["remote_addrs"] }
          ]
        }
      ]
    },
    "upstream": {
      "properties": {
        "checks": {
          "properties": {
            "passive": {
              "properties": {
                "unhealthy": {
                  "type": "object",
                  "properties": {
                    "http_failures": {
                      "minimum": 0,
                      "maximum": 254,
                      "type": "integer",
                      "default": 5
                    },
                    "tcp_failures": {
                      "minimum": 0,
                      "maximum": 254,
                      "type": "integer",
                      "default": 2
                    },
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "minimum": 200,
                        "type": "integer",
                        "maximum": 599
                      },
                      "default": [429, 500, 503]
                    },
                    "timeouts": {
                      "minimum": 0,
                      "maximum": 254,
                      "type": "integer",
                      "default": 7
                    }
                  }
                },
                "type": {
                  "enum": ["http", "https", "tcp"],
                  "type": "string",
                  "default": "http"
                },
                "healthy": {
                  "type": "object",
                  "properties": {
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "minimum": 200,
                        "type": "integer",
                        "maximum": 599
                      },
                      "default": [
                        200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300,
                        301, 302, 303, 304, 305, 306, 307, 308
                      ]
                    },
                    "successes": {
                      "minimum": 0,
                      "maximum": 254,
                      "type": "integer",
                      "default": 5
                    }
                  }
                }
              },
              "type": "object",
              "default": {
                "unhealthy": {
                  "http_failures": 0,
                  "tcp_failures": 0,
                  "http_statuses": [429, 500, 503],
                  "timeouts": 0
                },
                "type": "http",
                "healthy": {
                  "http_statuses": [
                    200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301,
                    302, 303, 304, 305, 306, 307, 308
                  ],
                  "successes": 0
                }
              }
            },
            "active": {
              "type": "object",
              "properties": {
                "timeout": { "type": "number", "default": 1 },
                "http_path": { "type": "string", "default": "/" },
                "host": {
                  "type": "string",
                  "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                },
                "port": { "minimum": 1, "type": "integer", "maximum": 65535 },
                "healthy": {
                  "type": "object",
                  "properties": {
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "minimum": 200,
                        "type": "integer",
                        "maximum": 599
                      },
                      "default": [200, 302]
                    },
                    "interval": {
                      "minimum": 1,
                      "type": "integer",
                      "default": 1
                    },
                    "successes": {
                      "minimum": 1,
                      "maximum": 254,
                      "type": "integer",
                      "default": 2
                    }
                  }
                },
                "req_headers": {
                  "minItems": 1,
                  "type": "array",
                  "items": { "type": "string", "uniqueItems": true }
                },
                "unhealthy": {
                  "type": "object",
                  "properties": {
                    "timeouts": {
                      "minimum": 1,
                      "maximum": 254,
                      "type": "integer",
                      "default": 3
                    },
                    "http_failures": {
                      "minimum": 1,
                      "maximum": 254,
                      "type": "integer",
                      "default": 5
                    },
                    "tcp_failures": {
                      "minimum": 1,
                      "maximum": 254,
                      "type": "integer",
                      "default": 2
                    },
                    "interval": {
                      "minimum": 1,
                      "type": "integer",
                      "default": 1
                    },
                    "http_statuses": {
                      "minItems": 1,
                      "uniqueItems": true,
                      "type": "array",
                      "items": {
                        "minimum": 200,
                        "type": "integer",
                        "maximum": 599
                      },
                      "default": [429, 404, 500, 501, 502, 503, 504, 505]
                    }
                  }
                },
                "concurrency": { "type": "integer", "default": 10 },
                "https_verify_certificate": {
                  "type": "boolean",
                  "default": true
                },
                "type": {
                  "enum": ["http", "https", "tcp"],
                  "type": "string",
                  "default": "http"
                }
              }
            }
          },
          "type": "object",
          "anyOf": [
            { "required": ["active"] },
            { "required": ["active", "passive"] }
          ]
        },
        "type": {
          "description": "algorithms of load balancing",
          "type": "string"
        },
        "create_time": { "type": "integer" },
        "retries": { "type": "integer", "minimum": 0 },
        "retry_timeout": { "type": "number", "minimum": 0 },
        "tls": {
          "required": ["client_cert", "client_key"],
          "properties": {
            "client_cert": {
              "maxLength": 65536,
              "type": "string",
              "minLength": 128
            },
            "client_key": {
              "maxLength": 65536,
              "type": "string",
              "minLength": 128
            }
          },
          "type": "object"
        },
        "hash_on": {
          "enum": ["vars", "header", "cookie", "consumer", "vars_combinations"],
          "type": "string",
          "default": "vars"
        },
        "pass_host": {
          "description": "mod of host passing",
          "enum": ["pass", "node", "rewrite"],
          "type": "string",
          "default": "pass"
        },
        "upstream_host": {
          "type": "string",
          "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
        },
        "update_time": { "type": "integer" },
        "keepalive_pool": {
          "type": "object",
          "properties": {
            "size": { "minimum": 1, "type": "integer", "default": 320 },
            "idle_timeout": { "minimum": 0, "type": "number", "default": 60 },
            "requests": { "minimum": 1, "type": "integer", "default": 1000 }
          }
        },
        "timeout": {
          "required": ["connect", "send", "read"],
          "properties": {
            "send": { "type": "number", "exclusiveMinimum": 0 },
            "read": { "type": "number", "exclusiveMinimum": 0 },
            "connect": { "type": "number", "exclusiveMinimum": 0 }
          },
          "type": "object"
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string",
              "minLength": 1,
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64
            }
          }
        },
        "discovery_type": { "description": "discovery type", "type": "string" },
        "discovery_args": {
          "type": "object",
          "properties": {
            "group_name": { "description": "group name", "type": "string" },
            "namespace_id": { "description": "namespace id", "type": "string" }
          }
        },
        "key": {
          "description": "the key of chash for dynamic load balancing",
          "type": "string"
        },
        "service_name": { "maxLength": 256, "type": "string", "minLength": 1 },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "desc": { "type": "string", "maxLength": 256 },
        "name": { "maxLength": 100, "type": "string", "minLength": 1 },
        "nodes": {
          "anyOf": [
            {
              "type": "object",
              "patternProperties": {
                ".*": {
                  "description": "weight of node",
                  "type": "integer",
                  "minimum": 0
                }
              }
            },
            {
              "type": "array",
              "items": {
                "required": ["host", "port", "weight"],
                "properties": {
                  "weight": {
                    "description": "weight of node",
                    "type": "integer",
                    "minimum": 0
                  },
                  "port": {
                    "description": "port of node",
                    "type": "integer",
                    "minimum": 1
                  },
                  "metadata": {
                    "description": "metadata of node",
                    "type": "object"
                  },
                  "host": {
                    "type": "string",
                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                  },
                  "priority": {
                    "description": "priority of node",
                    "type": "integer",
                    "default": 0
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "scheme": {
          "enum": [
            "grpc",
            "grpcs",
            "http",
            "https",
            "tcp",
            "tls",
            "udp",
            "kafka"
          ],
          "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
          "default": "http"
        }
      },
      "type": "object",
      "oneOf": [
        { "required": ["type", "nodes"] },
        { "required": ["type", "service_name", "discovery_type"] }
      ]
    },
    "plugin_config": {
      "required": ["id", "plugins"],
      "properties": {
        "create_time": { "type": "integer" },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string",
              "minLength": 1,
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64
            }
          }
        },
        "desc": { "type": "string", "maxLength": 256 },
        "update_time": { "type": "integer" },
        "plugins": { "type": "object" },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        }
      },
      "type": "object"
    },
    "global_rule": {
      "required": ["plugins"],
      "properties": {
        "create_time": { "type": "integer" },
        "update_time": { "type": "integer" },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "plugins": { "type": "object" }
      },
      "type": "object"
    },
    "upstream_hash_vars_schema": {
      "type": "string",
      "pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname)|arg_[0-9a-zA-z_-]+)$"
    },
    "plugins": {
      "type": "array",
      "items": {
        "required": ["name"],
        "properties": {
          "name": { "type": "string", "minLength": 1 },
          "stream": { "type": "boolean" }
        },
        "type": "object"
      }
    },
    "upstream_hash_header_schema": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9-_]+$"
    },
    "ssl": {
      "properties": {
        "update_time": { "type": "integer" },
        "create_time": { "type": "integer" },
        "snis": {
          "minItems": 1,
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
          }
        },
        "certs": {
          "type": "array",
          "items": { "maxLength": 65536, "type": "string", "minLength": 128 }
        },
        "sni": { "type": "string", "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$" },
        "validity_start": { "type": "integer" },
        "keys": {
          "type": "array",
          "items": { "maxLength": 65536, "type": "string", "minLength": 128 }
        },
        "exptime": { "type": "integer", "minimum": 1588262400 },
        "client": {
          "required": ["ca"],
          "properties": {
            "depth": { "minimum": 0, "type": "integer", "default": 1 },
            "ca": { "maxLength": 65536, "type": "string", "minLength": 128 }
          },
          "type": "object"
        },
        "validity_end": { "type": "integer" },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string",
              "minLength": 1,
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64
            }
          }
        },
        "cert": { "maxLength": 65536, "type": "string", "minLength": 128 },
        "key": { "maxLength": 65536, "type": "string", "minLength": 128 },
        "status": {
          "description": "ssl status, 1 to enable, 0 to disable",
          "enum": [1, 0],
          "type": "integer",
          "default": 1
        }
      },
      "type": "object",
      "oneOf": [
        { "required": ["sni", "key", "cert"] },
        { "required": ["snis", "key", "cert"] }
      ]
    },
    "proto": {
      "required": ["content"],
      "properties": {
        "content": { "maxLength": 1048576, "type": "string", "minLength": 1 },
        "create_time": { "type": "integer" },
        "desc": { "type": "string", "maxLength": 256 },
        "update_time": { "type": "integer" },
        "id": {
          "anyOf": [
            {
              "maxLength": 64,
              "pattern": "^[a-zA-Z0-9-_.]+$",
              "type": "string",
              "minLength": 1
            },
            { "type": "integer", "minimum": 1 }
          ]
        }
      },
      "type": "object"
    },
    "consumer": {
      "required": ["username"],
      "properties": {
        "username": {
          "maxLength": 100,
          "pattern": "^[a-zA-Z0-9_]+$",
          "type": "string",
          "minLength": 1
        },
        "create_time": { "type": "integer" },
        "desc": { "type": "string", "maxLength": 256 },
        "update_time": { "type": "integer" },
        "plugins": { "type": "object" },
        "labels": {
          "description": "key/value pairs to specify attributes",
          "type": "object",
          "patternProperties": {
            ".*": {
              "type": "string",
              "minLength": 1,
              "description": "value of label",
              "pattern": "^\\S+$",
              "maxLength": 64
            }
          }
        }
      },
      "type": "object"
    }
  },
  "stream_plugins": {
    "limit-conn": {
      "version": 0.1,
      "priority": 1003,
      "schema": {
        "required": ["conn", "burst", "default_conn_delay", "key"],
        "properties": {
          "conn": { "type": "integer", "exclusiveMinimum": 0 },
          "disable": { "type": "boolean" },
          "key_type": {
            "enum": ["var", "var_combination"],
            "type": "string",
            "default": "var"
          },
          "default_conn_delay": { "type": "number", "exclusiveMinimum": 0 },
          "only_use_default_delay": { "type": "boolean", "default": false },
          "burst": { "type": "integer", "minimum": 0 },
          "key": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "ip-restriction": {
      "version": 0.1,
      "priority": 3000,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "message": {
            "maxLength": 1024,
            "default": "Your IP address is not allowed",
            "type": "string",
            "minLength": 1
          },
          "disable": { "type": "boolean" },
          "blacklist": {
            "minItems": 1,
            "type": "array",
            "items": {
              "anyOf": [
                { "title": "IPv4", "type": "string", "format": "ipv4" },
                {
                  "title": "IPv4/CIDR",
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                },
                { "title": "IPv6", "type": "string", "format": "ipv6" },
                {
                  "title": "IPv6/CIDR",
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                }
              ]
            }
          },
          "whitelist": {
            "minItems": 1,
            "type": "array",
            "items": {
              "anyOf": [
                { "title": "IPv4", "type": "string", "format": "ipv4" },
                {
                  "title": "IPv4/CIDR",
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                },
                { "title": "IPv6", "type": "string", "format": "ipv6" },
                {
                  "title": "IPv6/CIDR",
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                }
              ]
            }
          }
        },
        "type": "object",
        "oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }]
      }
    },
    "syslog": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            }
          }
        }
      },
      "priority": 401,
      "schema": {
        "required": ["host", "port"],
        "properties": {
          "timeout": { "minimum": 1, "type": "integer", "default": 3000 },
          "host": { "type": "string" },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "port": { "type": "integer" },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "tls": { "type": "boolean", "default": false },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "disable": { "type": "boolean" },
          "pool_size": { "minimum": 5, "type": "integer", "default": 5 },
          "flush_limit": { "minimum": 1, "type": "integer", "default": 4096 },
          "drop_limit": { "type": "integer", "default": 1048576 },
          "sock_type": {
            "enum": ["tcp", "udp"],
            "type": "string",
            "default": "tcp"
          },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "name": { "type": "string", "default": "stream sys logger" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "mqtt-proxy": {
      "version": 0.1,
      "priority": 1000,
      "schema": {
        "required": ["protocol_name", "protocol_level"],
        "properties": {
          "protocol_name": { "type": "string" },
          "protocol_level": { "type": "integer" },
          "disable": { "type": "boolean" },
          "upstream": {
            "description": "Deprecated. We should configure upstream outside of the plugin",
            "properties": {
              "ip": { "type": "string" },
              "host": { "type": "string" },
              "port": { "type": "number" }
            },
            "type": "object",
            "oneOf": [
              { "required": ["host", "port"] },
              { "required": ["ip", "port"] }
            ]
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    }
  },
  "plugins": {
    "public-api": {
      "version": 0.1,
      "priority": 501,
      "schema": {
        "properties": {
          "disable": { "type": "boolean" },
          "uri": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "redirect": {
      "version": 0.1,
      "priority": 900,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "http_to_https": { "type": "boolean" },
          "uri": {
            "pattern": "(\\\\\\$[0-9a-zA-Z_]+)|\\$\\{([0-9a-zA-Z_]+)\\}|\\$([0-9a-zA-Z_]+)|(\\$|[^$\\\\]+)",
            "type": "string",
            "minLength": 2
          },
          "append_query_string": { "type": "boolean", "default": false },
          "ret_code": { "minimum": 200, "type": "integer", "default": 302 },
          "regex_uri": {
            "minItems": 2,
            "type": "array",
            "description": "params for generating new uri that substitute from client uri, first param is regular expression, the second one is uri template",
            "maxItems": 2,
            "items": { "description": "regex uri", "type": "string" }
          },
          "disable": { "type": "boolean" },
          "encode_uri": { "type": "boolean", "default": false }
        },
        "type": "object",
        "oneOf": [
          { "required": ["uri"] },
          { "required": ["regex_uri"] },
          { "required": ["http_to_https"] }
        ]
      }
    },
    "request-validation": {
      "version": 0.1,
      "priority": 2800,
      "type": "validation",
      "schema": {
        "anyOf": [
          { "required": ["header_schema"] },
          { "required": ["body_schema"] }
        ],
        "properties": {
          "rejected_msg": {
            "maxLength": 256,
            "type": "string",
            "minLength": 1
          },
          "disable": { "type": "boolean" },
          "header_schema": { "type": "object" },
          "body_schema": { "type": "object" },
          "rejected_code": {
            "minimum": 200,
            "maximum": 599,
            "type": "integer",
            "default": 400
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "zipkin": {
      "version": 0.1,
      "priority": 12011,
      "schema": {
        "required": ["endpoint", "sample_ratio"],
        "properties": {
          "service_name": {
            "description": "service name for zipkin reporter",
            "type": "string",
            "default": "APISIX"
          },
          "server_addr": {
            "description": "default is $server_addr, you can specify your external ip address",
            "type": "string",
            "pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$"
          },
          "endpoint": { "type": "string" },
          "sample_ratio": { "minimum": 1e-5, "type": "number", "maximum": 1 },
          "disable": { "type": "boolean" },
          "span_version": { "enum": [1, 2], "default": 2 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "openwhisk": {
      "version": 0.1,
      "priority": -1901,
      "schema": {
        "required": ["api_host", "service_token", "namespace", "action"],
        "properties": {
          "timeout": {
            "maximum": 60000,
            "type": "integer",
            "minimum": 1,
            "description": "timeout in milliseconds",
            "default": 3000
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "type": "integer",
            "default": 60000
          },
          "result": { "type": "boolean", "default": true },
          "keepalive": { "type": "boolean", "default": true },
          "api_host": { "type": "string" },
          "service_token": { "type": "string" },
          "namespace": {
            "maxLength": 256,
            "type": "string",
            "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
          },
          "package": {
            "maxLength": 256,
            "type": "string",
            "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
          },
          "ssl_verify": { "type": "boolean", "default": true },
          "disable": { "type": "boolean" },
          "action": {
            "maxLength": 256,
            "type": "string",
            "pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z"
          },
          "keepalive_pool": { "minimum": 1, "type": "integer", "default": 5 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "echo": {
      "version": 0.1,
      "priority": 412,
      "schema": {
        "type": "object",
        "minProperties": 1,
        "properties": {
          "headers": {
            "description": "new headers for response",
            "type": "object",
            "minProperties": 1
          },
          "before_body": {
            "description": "body before the filter phase.",
            "type": "string"
          },
          "disable": { "type": "boolean" },
          "body": {
            "description": "body to replace upstream response.",
            "type": "string"
          },
          "after_body": {
            "description": "body after the modification of filter phase.",
            "type": "string"
          }
        },
        "anyOf": [
          { "required": ["before_body"] },
          { "required": ["body"] },
          { "required": ["after_body"] }
        ],
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "opa": {
      "version": 0.1,
      "priority": 2001,
      "schema": {
        "required": ["host", "policy"],
        "properties": {
          "timeout": {
            "maximum": 60000,
            "type": "integer",
            "minimum": 1,
            "description": "timeout in milliseconds",
            "default": 3000
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "type": "integer",
            "default": 60000
          },
          "host": { "type": "string" },
          "keepalive": { "type": "boolean", "default": true },
          "disable": { "type": "boolean" },
          "with_route": { "type": "boolean", "default": false },
          "policy": { "type": "string" },
          "ssl_verify": { "type": "boolean", "default": true },
          "with_service": { "type": "boolean", "default": false },
          "with_consumer": { "type": "boolean", "default": false },
          "keepalive_pool": { "minimum": 1, "type": "integer", "default": 5 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "http-logger": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            }
          }
        }
      },
      "priority": 410,
      "schema": {
        "required": ["uri"],
        "properties": {
          "timeout": { "minimum": 1, "type": "integer", "default": 3 },
          "uri": {
            "type": "string",
            "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
          },
          "name": { "type": "string", "default": "http logger" },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "auth_header": { "type": "string", "default": "" },
          "concat_method": {
            "enum": ["json", "new_line"],
            "type": "string",
            "default": "json"
          },
          "disable": { "type": "boolean" },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "include_resp_body_expr": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "array" }
          },
          "ssl_verify": { "type": "boolean", "default": false },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "include_resp_body": { "type": "boolean", "default": false },
          "include_req_body": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "aws-lambda": {
      "version": 0.1,
      "priority": -1899,
      "schema": {
        "required": ["function_uri"],
        "properties": {
          "timeout": { "minimum": 100, "type": "integer", "default": 3000 },
          "keepalive_timeout": {
            "minimum": 1000,
            "type": "integer",
            "default": 60000
          },
          "disable": { "type": "boolean" },
          "keepalive_pool": { "minimum": 1, "type": "integer", "default": 5 },
          "ssl_verify": { "type": "boolean", "default": true },
          "keepalive": { "type": "boolean", "default": true },
          "authorization": {
            "type": "object",
            "properties": {
              "apikey": { "type": "string" },
              "iam": {
                "required": ["accesskey", "secretkey"],
                "properties": {
                  "accesskey": {
                    "type": "string",
                    "description": "access key id from from aws iam console"
                  },
                  "service": {
                    "description": "the service that is receiving the request",
                    "type": "string",
                    "default": "execute-api"
                  },
                  "secretkey": {
                    "type": "string",
                    "description": "secret access key from from aws iam console"
                  },
                  "aws_region": {
                    "description": "the aws region that is receiving the request",
                    "type": "string",
                    "default": "us-east-1"
                  }
                },
                "type": "object"
              }
            }
          },
          "function_uri": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "serverless-pre-function": {
      "version": 0.1,
      "priority": 10000,
      "schema": {
        "required": ["functions"],
        "properties": {
          "functions": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "string" }
          },
          "disable": { "type": "boolean" },
          "phase": {
            "enum": [
              "rewrite",
              "access",
              "header_filter",
              "body_filter",
              "log",
              "before_proxy"
            ],
            "type": "string",
            "default": "access"
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "fault-injection": {
      "version": 0.1,
      "priority": 11000,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "delay": {
            "required": ["duration"],
            "properties": {
              "duration": { "type": "number", "minimum": 0 },
              "vars": {
                "maxItems": 20,
                "type": "array",
                "items": { "type": "array" }
              },
              "percentage": { "minimum": 0, "type": "integer", "maximum": 100 }
            },
            "type": "object"
          },
          "disable": { "type": "boolean" },
          "abort": {
            "required": ["http_status"],
            "properties": {
              "vars": {
                "maxItems": 20,
                "type": "array",
                "items": { "type": "array" }
              },
              "body": { "type": "string", "minLength": 0 },
              "http_status": { "type": "integer", "minimum": 200 },
              "percentage": { "minimum": 0, "type": "integer", "maximum": 100 }
            },
            "type": "object"
          }
        },
        "type": "object",
        "minProperties": 1
      }
    },
    "rocketmq-logger": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            }
          }
        }
      },
      "priority": 402,
      "schema": {
        "required": ["nameserver_list", "topic"],
        "properties": {
          "name": { "type": "string", "default": "rocketmq logger" },
          "meta_format": {
            "enum": ["default", "origin"],
            "type": "string",
            "default": "default"
          },
          "nameserver_list": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "string" }
          },
          "tag": { "type": "string" },
          "use_tls": { "type": "boolean", "default": false },
          "access_key": { "type": "string", "default": "" },
          "secret_key": { "type": "string", "default": "" },
          "timeout": { "minimum": 1, "type": "integer", "default": 3 },
          "include_req_body": { "type": "boolean", "default": false },
          "include_req_body_expr": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "array" }
          },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "topic": { "type": "string" },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "disable": { "type": "boolean" },
          "include_resp_body_expr": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "array" }
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "include_resp_body": { "type": "boolean", "default": false },
          "key": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "authz-casdoor": {
      "version": 0.1,
      "priority": 2559,
      "schema": {
        "required": [
          "callback_url",
          "endpoint_addr",
          "client_id",
          "client_secret"
        ],
        "properties": {
          "disable": { "type": "boolean" },
          "client_id": { "type": "string" },
          "endpoint_addr": { "type": "string", "pattern": "^[^%?]+[^/]$" },
          "client_secret": { "type": "string" },
          "callback_url": { "type": "string", "pattern": "^[^%?]+[^/]$" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "ext-plugin-pre-req": {
      "version": 0.1,
      "priority": 12000,
      "schema": {
        "properties": {
          "conf": {
            "minItems": 1,
            "type": "array",
            "items": {
              "required": ["name", "value"],
              "properties": {
                "name": { "maxLength": 128, "type": "string", "minLength": 1 },
                "value": { "type": "string" }
              },
              "type": "object"
            }
          },
          "disable": { "type": "boolean" },
          "allow_degradation": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "client-control": {
      "version": 0.1,
      "priority": 22000,
      "schema": {
        "properties": {
          "disable": { "type": "boolean" },
          "max_body_size": { "type": "integer", "minimum": 0 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "limit-conn": {
      "version": 0.1,
      "priority": 1003,
      "schema": {
        "required": ["conn", "burst", "default_conn_delay", "key"],
        "properties": {
          "conn": { "type": "integer", "exclusiveMinimum": 0 },
          "burst": { "type": "integer", "minimum": 0 },
          "rejected_code": {
            "minimum": 200,
            "maximum": 599,
            "type": "integer",
            "default": 503
          },
          "rejected_msg": { "type": "string", "minLength": 1 },
          "disable": { "type": "boolean" },
          "key_type": {
            "enum": ["var", "var_combination"],
            "type": "string",
            "default": "var"
          },
          "default_conn_delay": { "type": "number", "exclusiveMinimum": 0 },
          "only_use_default_delay": { "type": "boolean", "default": false },
          "key": { "type": "string" },
          "allow_degradation": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "file-logger": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            }
          }
        }
      },
      "priority": 399,
      "schema": {
        "required": ["path"],
        "properties": {
          "disable": { "type": "boolean" },
          "path": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "limit-req": {
      "version": 0.1,
      "priority": 1001,
      "schema": {
        "required": ["rate", "burst", "key"],
        "properties": {
          "rate": { "type": "number", "exclusiveMinimum": 0 },
          "burst": { "type": "number", "minimum": 0 },
          "rejected_code": {
            "minimum": 200,
            "maximum": 599,
            "type": "integer",
            "default": 503
          },
          "rejected_msg": { "type": "string", "minLength": 1 },
          "nodelay": { "type": "boolean", "default": false },
          "disable": { "type": "boolean" },
          "key_type": {
            "enum": ["var", "var_combination"],
            "type": "string",
            "default": "var"
          },
          "key": { "type": "string" },
          "allow_degradation": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "basic-auth": {
      "version": 0.1,
      "type": "auth",
      "schema": {
        "title": "work with route or service object",
        "properties": {
          "disable": { "type": "boolean" },
          "hide_credentials": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      },
      "consumer_schema": {
        "title": "work with consumer object",
        "properties": {
          "password": { "type": "string" },
          "username": { "type": "string" }
        },
        "type": "object",
        "required": ["username", "password"]
      },
      "priority": 2520
    },
    "response-rewrite": {
      "version": 0.1,
      "priority": 899,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "disable": { "type": "boolean" },
          "headers": {
            "description": "new headers for response",
            "type": "object",
            "minProperties": 1
          },
          "filters": {
            "description": "a group of filters that modify response bodyby replacing one specified string by another",
            "minItems": 1,
            "type": "array",
            "items": {
              "description": "filter that modifies response body",
              "properties": {
                "regex": {
                  "description": "match pattern on response body",
                  "type": "string",
                  "minLength": 1
                },
                "options": {
                  "description": "regex options",
                  "type": "string",
                  "default": "jo"
                },
                "replace": {
                  "description": "regex substitution content",
                  "type": "string"
                },
                "scope": {
                  "description": "regex substitution range",
                  "enum": ["once", "global"],
                  "type": "string",
                  "default": "once"
                }
              },
              "type": "object",
              "required": ["regex", "replace"]
            }
          },
          "vars": { "type": "array" },
          "body_base64": {
            "description": "whether new body for response need base64 decode before return",
            "type": "boolean",
            "default": false
          },
          "status_code": {
            "description": "new status code for response",
            "maximum": 598,
            "type": "integer",
            "minimum": 200
          },
          "body": { "description": "new body for response", "type": "string" },
          "oneOf": ["body", "filters"]
        },
        "type": "object",
        "minProperties": 1
      }
    },
    "cors": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "allow_origins": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$"
            }
          }
        }
      },
      "priority": 4000,
      "schema": {
        "properties": {
          "allow_headers": {
            "description": "you can use '*' to allow all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
            "type": "string",
            "default": "*"
          },
          "max_age": {
            "description": "maximum number of seconds the results can be cached.-1 means no cached, the max value is depend on browser,more details plz check MDN. default: 5.",
            "type": "integer",
            "default": 5
          },
          "expose_headers": {
            "description": "you can use '*' to expose all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
            "type": "string",
            "default": "*"
          },
          "allow_credential": {
            "description": "allow client append credential. according to CORS specification,if you set this option to 'true', you can not use '*' for other options.",
            "type": "boolean",
            "default": false
          },
          "allow_origins": {
            "description": "you can use '*' to allow all origins when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple origin use ',' to split. default: *.",
            "pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
            "type": "string",
            "default": "*"
          },
          "allow_origins_by_regex": {
            "minItems": 1,
            "type": "array",
            "description": "you can use regex to allow specific origins when no credentials,for example use [.*\\.test.com] to allow a.test.com and b.test.com",
            "uniqueItems": true,
            "items": { "maxLength": 4096, "type": "string", "minLength": 1 }
          },
          "allow_methods": {
            "description": "you can use '*' to allow all methods when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple method use ',' to split. default: *.",
            "type": "string",
            "default": "*"
          },
          "allow_origins_by_metadata": {
            "minItems": 1,
            "type": "array",
            "description": "set allowed origins by referencing origins in plugin metadata",
            "uniqueItems": true,
            "items": { "maxLength": 4096, "type": "string", "minLength": 1 }
          },
          "disable": { "type": "boolean" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "tcp-logger": {
      "version": 0.1,
      "priority": 405,
      "schema": {
        "required": ["host", "port"],
        "properties": {
          "timeout": { "minimum": 1, "type": "integer", "default": 1000 },
          "include_req_body": { "type": "boolean", "default": false },
          "host": { "type": "string" },
          "port": { "type": "integer", "minimum": 0 },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "tls": { "type": "boolean", "default": false },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "disable": { "type": "boolean" },
          "tls_options": { "type": "string" },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "name": { "type": "string", "default": "tcp logger" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "referer-restriction": {
      "version": 0.1,
      "priority": 2990,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "blacklist": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
            }
          },
          "disable": { "type": "boolean" },
          "message": {
            "maxLength": 1024,
            "default": "Your referer host is not allowed",
            "type": "string",
            "minLength": 1
          },
          "bypass_missing": { "type": "boolean", "default": false },
          "whitelist": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
            }
          }
        },
        "type": "object",
        "oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }]
      }
    },
    "authz-keycloak": {
      "version": 0.1,
      "priority": 2000,
      "schema": {
        "allOf": [
          {
            "anyOf": [
              { "required": ["discovery"] },
              { "required": ["token_endpoint"] }
            ]
          },
          {
            "anyOf": [
              { "required": ["client_id"] },
              { "required": ["audience"] }
            ]
          },
          {
            "anyOf": [
              { "properties": { "lazy_load_paths": { "enum": [false] } } },
              {
                "anyOf": [
                  { "required": ["discovery"] },
                  { "required": ["resource_registration_endpoint"] }
                ],
                "properties": { "lazy_load_paths": { "enum": [true] } }
              }
            ]
          }
        ],
        "properties": {
          "grant_type": {
            "type": "string",
            "minLength": 1,
            "enum": ["urn:ietf:params:oauth:grant-type:uma-ticket"],
            "maxLength": 100,
            "default": "urn:ietf:params:oauth:grant-type:uma-ticket"
          },
          "refresh_token_expires_in": {
            "minimum": 1,
            "type": "integer",
            "default": 3600
          },
          "refresh_token_expires_leeway": {
            "minimum": 0,
            "type": "integer",
            "default": 0
          },
          "password_grant_token_generation_incoming_uri": {
            "maxLength": 4096,
            "type": "string",
            "minLength": 1
          },
          "disable": { "type": "boolean" },
          "ssl_verify": { "type": "boolean", "default": true },
          "access_token_expires_leeway": {
            "minimum": 0,
            "type": "integer",
            "default": 0
          },
          "keepalive_pool": { "minimum": 1, "type": "integer", "default": 5 },
          "timeout": { "minimum": 1000, "type": "integer", "default": 3000 },
          "keepalive_timeout": {
            "minimum": 1000,
            "type": "integer",
            "default": 60000
          },
          "token_endpoint": {
            "maxLength": 4096,
            "type": "string",
            "minLength": 1
          },
          "resource_registration_endpoint": {
            "maxLength": 4096,
            "type": "string",
            "minLength": 1
          },
          "audience": {
            "maxLength": 100,
            "description": "Deprecated, use `client_id` instead.",
            "type": "string",
            "minLength": 1
          },
          "keepalive": { "type": "boolean", "default": true },
          "discovery": { "maxLength": 4096, "type": "string", "minLength": 1 },
          "policy_enforcement_mode": {
            "enum": ["ENFORCING", "PERMISSIVE"],
            "type": "string",
            "default": "ENFORCING"
          },
          "http_method_as_scope": { "type": "boolean", "default": false },
          "client_id": { "maxLength": 100, "type": "string", "minLength": 1 },
          "permissions": {
            "items": { "maxLength": 100, "type": "string", "minLength": 1 },
            "uniqueItems": true,
            "type": "array",
            "default": {}
          },
          "lazy_load_paths": { "type": "boolean", "default": false },
          "client_secret": {
            "maxLength": 100,
            "type": "string",
            "minLength": 1
          },
          "cache_ttl_seconds": {
            "minimum": 1,
            "type": "integer",
            "default": 86400
          },
          "access_denied_redirect_uri": {
            "maxLength": 2048,
            "type": "string",
            "minLength": 1
          },
          "access_token_expires_in": {
            "minimum": 1,
            "type": "integer",
            "default": 300
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "consumer-restriction": {
      "version": 0.1,
      "priority": 2400,
      "schema": {
        "anyOf": [
          { "required": ["blacklist"] },
          { "required": ["whitelist"] },
          { "required": ["allowed_by_methods"] }
        ],
        "properties": {
          "blacklist": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "string" }
          },
          "disable": { "type": "boolean" },
          "type": {
            "enum": ["consumer_name", "service_id", "route_id"],
            "type": "string",
            "default": "consumer_name"
          },
          "rejected_msg": { "type": "string" },
          "allowed_by_methods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": { "type": "string" },
                "methods": {
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "description": "HTTP method",
                    "type": "string",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "DELETE",
                      "PATCH",
                      "HEAD",
                      "OPTIONS",
                      "CONNECT",
                      "TRACE",
                      "PURGE"
                    ]
                  }
                }
              }
            }
          },
          "rejected_code": {
            "minimum": 200,
            "type": "integer",
            "default": 403
          },
          "whitelist": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "string" }
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "openid-connect": {
      "version": 0.1,
      "priority": 2599,
      "schema": {
        "required": ["client_id", "client_secret", "discovery"],
        "properties": {
          "introspection_endpoint": { "type": "string" },
          "introspection_endpoint_auth_method": {
            "type": "string",
            "default": "client_secret_basic"
          },
          "bearer_only": { "type": "boolean", "default": false },
          "realm": { "type": "string", "default": "apisix" },
          "logout_path": { "type": "string", "default": "/logout" },
          "post_logout_redirect_uri": {
            "type": "string",
            "description": "the URI will be redirect when request logout_path"
          },
          "disable": { "type": "boolean" },
          "public_key": { "type": "string" },
          "token_signing_alg_values_expected": { "type": "string" },
          "set_access_token_header": {
            "description": "Whether the access token should be added as a header to the request for downstream",
            "type": "boolean",
            "default": true
          },
          "access_token_in_authorization_header": {
            "description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header.",
            "type": "boolean",
            "default": false
          },
          "timeout": {
            "minimum": 1,
            "description": "timeout in seconds",
            "type": "integer",
            "default": 3
          },
          "set_id_token_header": {
            "description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream.",
            "type": "boolean",
            "default": true
          },
          "scope": { "type": "string", "default": "openid" },
          "client_id": { "type": "string" },
          "set_userinfo_header": {
            "description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream.",
            "type": "boolean",
            "default": true
          },
          "redirect_uri": {
            "type": "string",
            "description": "use ngx.var.request_uri if not configured"
          },
          "discovery": { "type": "string" },
          "client_secret": { "type": "string" },
          "ssl_verify": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "uri-blocker": {
      "version": 0.1,
      "priority": 2900,
      "schema": {
        "required": ["block_rules"],
        "properties": {
          "rejected_msg": { "type": "string", "minLength": 1 },
          "block_rules": {
            "uniqueItems": true,
            "type": "array",
            "items": { "maxLength": 4096, "type": "string", "minLength": 1 }
          },
          "case_insensitive": { "type": "boolean", "default": false },
          "disable": { "type": "boolean" },
          "rejected_code": { "minimum": 200, "type": "integer", "default": 403 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "clickhouse-logger": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            }
          }
        }
      },
      "priority": 398,
      "schema": {
        "required": [
          "endpoint_addr",
          "user",
          "password",
          "database",
          "logtable"
        ],
        "properties": {
          "password": { "type": "string", "default": "" },
          "user": { "type": "string", "default": "" },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "endpoint_addr": {
            "type": "string",
            "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
          },
          "logtable": { "type": "string", "default": "" },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "disable": { "type": "boolean" },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "database": { "type": "string", "default": "" },
          "ssl_verify": { "type": "boolean", "default": true },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "timeout": { "minimum": 1, "type": "integer", "default": 3 },
          "name": { "type": "string", "default": "clickhouse-logger" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "ext-plugin-post-resp": {
      "version": 0.1,
      "priority": -4000,
      "schema": {
        "properties": {
          "conf": {
            "minItems": 1,
            "type": "array",
            "items": {
              "required": ["name", "value"],
              "properties": {
                "name": { "maxLength": 128, "type": "string", "minLength": 1 },
                "value": { "type": "string" }
              },
              "type": "object"
            }
          },
          "disable": { "type": "boolean" },
          "allow_degradation": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "request-id": {
      "version": 0.1,
      "priority": 11010,
      "schema": {
        "properties": {
          "include_in_response": { "type": "boolean", "default": true },
          "disable": { "type": "boolean" },
          "header_name": { "type": "string", "default": "X-Request-Id" },
          "algorithm": {
            "enum": ["uuid", "snowflake", "nanoid"],
            "type": "string",
            "default": "uuid"
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "google-cloud-logging": {
      "version": 0.1,
      "priority": 407,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "resource": {
            "required": ["type"],
            "properties": {
              "type": { "type": "string" },
              "labels": { "type": "object" }
            },
            "type": "object",
            "default": { "type": "global" }
          },
          "auth_config": {
            "required": ["private_key", "project_id", "token_uri"],
            "properties": {
              "private_key": { "type": "string" },
              "project_id": { "type": "string" },
              "token_uri": {
                "type": "string",
                "default": "https://oauth2.googleapis.com/token"
              },
              "entries_uri": {
                "type": "string",
                "default": "https://logging.googleapis.com/v2/entries:write"
              },
              "scopes": {
                "minItems": 1,
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "description": "Google OAuth2 Authorization Scopes",
                  "type": "string"
                },
                "default": [
                  "https://www.googleapis.com/auth/logging.read",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/logging.admin",
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            },
            "type": "object"
          },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "disable": { "type": "boolean" },
          "name": { "type": "string", "default": "google-cloud-logging" },
          "ssl_verify": { "type": "boolean", "default": true },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "log_id": { "type": "string", "default": "apisix.apache.org%2Flogs" },
          "auth_file": { "type": "string" }
        },
        "type": "object",
        "oneOf": [
          { "required": ["auth_config"] },
          { "required": ["auth_file"] }
        ]
      }
    },
    "wolf-rbac": {
      "version": 0.1,
      "priority": 2555,
      "type": "auth",
      "schema": {
        "properties": {
          "disable": { "type": "boolean" },
          "server": { "type": "string", "default": "http://127.0.0.1:12180" },
          "header_prefix": { "type": "string", "default": "X-" },
          "appid": { "type": "string", "default": "unset" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "loggly": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "timeout": { "minimum": 1, "type": "integer", "default": 5000 },
          "host": { "type": "string", "default": "logs-01.loggly.com" },
          "port": { "type": "integer", "default": 514 },
          "log_format": { "type": "object" },
          "protocol": {
            "enum": ["syslog", "http", "https"],
            "type": "string",
            "default": "syslog"
          }
        }
      },
      "priority": 411,
      "schema": {
        "required": ["customer_token"],
        "properties": {
          "name": { "type": "string", "default": "loggly" },
          "include_req_body": { "type": "boolean", "default": false },
          "include_resp_body_expr": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "array" }
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "severity": {
            "enum": [
              "NOTICE",
              "notice",
              "ALERT",
              "alert",
              "CRIT",
              "crit",
              "ERR",
              "err",
              "INFO",
              "info",
              "EMEGR",
              "emegr",
              "WARNING",
              "warning",
              "DEBUG",
              "debug"
            ],
            "description": "base severity log level",
            "type": "string",
            "default": "INFO"
          },
          "customer_token": { "type": "string" },
          "disable": { "type": "boolean" },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "severity_map": {
            "description": "upstream response code vs syslog severity mapping",
            "additionalProperties": false,
            "type": "object",
            "patternProperties": {
              "^[1-5][0-9]{2}$": {
                "description": "keys are HTTP status code, values are severity",
                "type": "string",
                "enum": [
                  "NOTICE",
                  "notice",
                  "ALERT",
                  "alert",
                  "CRIT",
                  "crit",
                  "ERR",
                  "err",
                  "INFO",
                  "info",
                  "EMEGR",
                  "emegr",
                  "WARNING",
                  "warning",
                  "DEBUG",
                  "debug"
                ]
              }
            }
          },
          "ssl_verify": { "type": "boolean", "default": true },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "include_resp_body": { "type": "boolean", "default": false },
          "tags": {
            "items": { "type": "string", "pattern": "^(?!tag=)[ -~]*" },
            "minItems": 1,
            "type": "array",
            "default": ["apisix"]
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "csrf": {
      "version": 0.1,
      "priority": 2980,
      "schema": {
        "required": ["key"],
        "properties": {
          "name": {
            "description": "the csrf token name",
            "type": "string",
            "default": "apisix-csrf-token"
          },
          "disable": { "type": "boolean" },
          "key": {
            "description": "use to generate csrf token",
            "type": "string"
          },
          "expires": {
            "description": "expires time(s) for csrf token",
            "type": "integer",
            "default": 7200
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "limit-count": {
      "version": 0.4,
      "priority": 1002,
      "schema": {
        "required": ["count", "time_window"],
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema",
        "then": {
          "required": ["redis_host"],
          "properties": {
            "redis_host": { "type": "string", "minLength": 2 },
            "redis_port": { "minimum": 1, "type": "integer", "default": 6379 },
            "redis_password": { "type": "string", "minLength": 0 },
            "redis_database": { "minimum": 0, "type": "integer", "default": 0 },
            "redis_timeout": {
              "minimum": 1,
              "type": "integer",
              "default": 1000
            }
          }
        },
        "properties": {
          "disable": { "type": "boolean" },
          "rejected_msg": { "type": "string", "minLength": 1 },
          "rejected_code": {
            "minimum": 200,
            "maximum": 599,
            "type": "integer",
            "default": 503
          },
          "count": { "type": "integer", "exclusiveMinimum": 0 },
          "show_limit_quota_header": { "type": "boolean", "default": true },
          "key": { "type": "string", "default": "remote_addr" },
          "policy": {
            "enum": ["local", "redis", "redis-cluster"],
            "type": "string",
            "default": "local"
          },
          "group": { "type": "string" },
          "time_window": { "type": "integer", "exclusiveMinimum": 0 },
          "key_type": {
            "enum": ["var", "var_combination", "constant"],
            "type": "string",
            "default": "var"
          },
          "allow_degradation": { "type": "boolean", "default": false }
        },
        "if": { "properties": { "policy": { "enum": ["redis"] } } },
        "else": {
          "if": { "properties": { "policy": { "enum": ["redis-cluster"] } } },
          "then": {
            "required": ["redis_cluster_nodes", "redis_cluster_name"],
            "properties": {
              "redis_timeout": {
                "minimum": 1,
                "type": "integer",
                "default": 1000
              },
              "redis_password": { "type": "string", "minLength": 0 },
              "redis_cluster_nodes": {
                "minItems": 2,
                "type": "array",
                "items": { "maxLength": 100, "type": "string", "minLength": 2 }
              },
              "redis_cluster_name": { "type": "string" }
            }
          }
        }
      }
    },
    "traffic-split": {
      "version": 0.1,
      "priority": 966,
      "schema": {
        "properties": {
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "weighted_upstreams": {
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "properties": {
                      "upstream": {
                        "properties": {
                          "checks": {
                            "properties": {
                              "passive": {
                                "properties": {
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_failures": {
                                        "minimum": 0,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 5
                                      },
                                      "tcp_failures": {
                                        "minimum": 0,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 2
                                      },
                                      "http_statuses": {
                                        "minItems": 1,
                                        "uniqueItems": true,
                                        "type": "array",
                                        "items": {
                                          "minimum": 200,
                                          "type": "integer",
                                          "maximum": 599
                                        },
                                        "default": [429, 500, 503]
                                      },
                                      "timeouts": {
                                        "minimum": 0,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 7
                                      }
                                    }
                                  },
                                  "type": {
                                    "enum": ["http", "https", "tcp"],
                                    "type": "string",
                                    "default": "http"
                                  },
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "minItems": 1,
                                        "uniqueItems": true,
                                        "type": "array",
                                        "items": {
                                          "minimum": 200,
                                          "type": "integer",
                                          "maximum": 599
                                        },
                                        "default": [
                                          200, 201, 202, 203, 204, 205, 206,
                                          207, 208, 226, 300, 301, 302, 303,
                                          304, 305, 306, 307, 308
                                        ]
                                      },
                                      "successes": {
                                        "minimum": 0,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 5
                                      }
                                    }
                                  }
                                },
                                "type": "object",
                                "default": {
                                  "unhealthy": {
                                    "http_failures": 0,
                                    "tcp_failures": 0,
                                    "http_statuses": [429, 500, 503],
                                    "timeouts": 0
                                  },
                                  "type": "http",
                                  "healthy": {
                                    "http_statuses": [
                                      200, 201, 202, 203, 204, 205, 206, 207,
                                      208, 226, 300, 301, 302, 303, 304, 305,
                                      306, 307, 308
                                    ],
                                    "successes": 0
                                  }
                                }
                              },
                              "active": {
                                "type": "object",
                                "properties": {
                                  "timeout": { "type": "number", "default": 1 },
                                  "http_path": {
                                    "type": "string",
                                    "default": "/"
                                  },
                                  "host": {
                                    "type": "string",
                                    "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                                  },
                                  "port": {
                                    "minimum": 1,
                                    "type": "integer",
                                    "maximum": 65535
                                  },
                                  "healthy": {
                                    "type": "object",
                                    "properties": {
                                      "http_statuses": {
                                        "minItems": 1,
                                        "uniqueItems": true,
                                        "type": "array",
                                        "items": {
                                          "minimum": 200,
                                          "type": "integer",
                                          "maximum": 599
                                        },
                                        "default": [200, 302]
                                      },
                                      "interval": {
                                        "minimum": 1,
                                        "type": "integer",
                                        "default": 1
                                      },
                                      "successes": {
                                        "minimum": 1,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 2
                                      }
                                    }
                                  },
                                  "req_headers": {
                                    "minItems": 1,
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "uniqueItems": true
                                    }
                                  },
                                  "unhealthy": {
                                    "type": "object",
                                    "properties": {
                                      "timeouts": {
                                        "minimum": 1,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 3
                                      },
                                      "http_failures": {
                                        "minimum": 1,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 5
                                      },
                                      "tcp_failures": {
                                        "minimum": 1,
                                        "maximum": 254,
                                        "type": "integer",
                                        "default": 2
                                      },
                                      "interval": {
                                        "minimum": 1,
                                        "type": "integer",
                                        "default": 1
                                      },
                                      "http_statuses": {
                                        "minItems": 1,
                                        "uniqueItems": true,
                                        "type": "array",
                                        "items": {
                                          "minimum": 200,
                                          "type": "integer",
                                          "maximum": 599
                                        },
                                        "default": [
                                          429, 404, 500, 501, 502, 503, 504, 505
                                        ]
                                      }
                                    }
                                  },
                                  "concurrency": {
                                    "type": "integer",
                                    "default": 10
                                  },
                                  "https_verify_certificate": {
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "type": {
                                    "enum": ["http", "https", "tcp"],
                                    "type": "string",
                                    "default": "http"
                                  }
                                }
                              }
                            },
                            "type": "object",
                            "anyOf": [
                              { "required": ["active"] },
                              { "required": ["active", "passive"] }
                            ]
                          },
                          "type": {
                            "description": "algorithms of load balancing",
                            "type": "string"
                          },
                          "create_time": { "type": "integer" },
                          "retries": { "type": "integer", "minimum": 0 },
                          "retry_timeout": { "type": "number", "minimum": 0 },
                          "tls": {
                            "required": ["client_cert", "client_key"],
                            "properties": {
                              "client_cert": {
                                "maxLength": 65536,
                                "type": "string",
                                "minLength": 128
                              },
                              "client_key": {
                                "maxLength": 65536,
                                "type": "string",
                                "minLength": 128
                              }
                            },
                            "type": "object"
                          },
                          "hash_on": {
                            "enum": [
                              "vars",
                              "header",
                              "cookie",
                              "consumer",
                              "vars_combinations"
                            ],
                            "type": "string",
                            "default": "vars"
                          },
                          "pass_host": {
                            "description": "mod of host passing",
                            "enum": ["pass", "node", "rewrite"],
                            "type": "string",
                            "default": "pass"
                          },
                          "upstream_host": {
                            "type": "string",
                            "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                          },
                          "update_time": { "type": "integer" },
                          "keepalive_pool": {
                            "type": "object",
                            "properties": {
                              "size": {
                                "minimum": 1,
                                "type": "integer",
                                "default": 320
                              },
                              "idle_timeout": {
                                "minimum": 0,
                                "type": "number",
                                "default": 60
                              },
                              "requests": {
                                "minimum": 1,
                                "type": "integer",
                                "default": 1000
                              }
                            }
                          },
                          "timeout": {
                            "required": ["connect", "send", "read"],
                            "properties": {
                              "send": {
                                "type": "number",
                                "exclusiveMinimum": 0
                              },
                              "read": {
                                "type": "number",
                                "exclusiveMinimum": 0
                              },
                              "connect": {
                                "type": "number",
                                "exclusiveMinimum": 0
                              }
                            },
                            "type": "object"
                          },
                          "labels": {
                            "description": "key/value pairs to specify attributes",
                            "type": "object",
                            "patternProperties": {
                              ".*": {
                                "type": "string",
                                "minLength": 1,
                                "description": "value of label",
                                "pattern": "^\\S+$",
                                "maxLength": 64
                              }
                            }
                          },
                          "discovery_type": {
                            "description": "discovery type",
                            "type": "string"
                          },
                          "discovery_args": {
                            "type": "object",
                            "properties": {
                              "group_name": {
                                "description": "group name",
                                "type": "string"
                              },
                              "namespace_id": {
                                "description": "namespace id",
                                "type": "string"
                              }
                            }
                          },
                          "key": {
                            "description": "the key of chash for dynamic load balancing",
                            "type": "string"
                          },
                          "service_name": {
                            "maxLength": 256,
                            "type": "string",
                            "minLength": 1
                          },
                          "id": {
                            "anyOf": [
                              {
                                "maxLength": 64,
                                "pattern": "^[a-zA-Z0-9-_.]+$",
                                "type": "string",
                                "minLength": 1
                              },
                              { "type": "integer", "minimum": 1 }
                            ]
                          },
                          "desc": { "type": "string", "maxLength": 256 },
                          "name": {
                            "maxLength": 100,
                            "type": "string",
                            "minLength": 1
                          },
                          "nodes": {
                            "anyOf": [
                              {
                                "type": "object",
                                "patternProperties": {
                                  ".*": {
                                    "description": "weight of node",
                                    "type": "integer",
                                    "minimum": 0
                                  }
                                }
                              },
                              {
                                "type": "array",
                                "items": {
                                  "required": ["host", "port", "weight"],
                                  "properties": {
                                    "weight": {
                                      "description": "weight of node",
                                      "type": "integer",
                                      "minimum": 0
                                    },
                                    "port": {
                                      "description": "port of node",
                                      "type": "integer",
                                      "minimum": 1
                                    },
                                    "metadata": {
                                      "description": "metadata of node",
                                      "type": "object"
                                    },
                                    "host": {
                                      "type": "string",
                                      "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$"
                                    },
                                    "priority": {
                                      "description": "priority of node",
                                      "type": "integer",
                                      "default": 0
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            ]
                          },
                          "scheme": {
                            "enum": [
                              "grpc",
                              "grpcs",
                              "http",
                              "https",
                              "tcp",
                              "tls",
                              "udp",
                              "kafka"
                            ],
                            "description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka.",
                            "default": "http"
                          }
                        },
                        "type": "object",
                        "oneOf": [
                          { "required": ["type", "nodes"] },
                          {
                            "required": [
                              "type",
                              "service_name",
                              "discovery_type"
                            ]
                          }
                        ]
                      },
                      "upstream_id": {
                        "anyOf": [
                          {
                            "maxLength": 64,
                            "pattern": "^[a-zA-Z0-9-_.]+$",
                            "type": "string",
                            "minLength": 1
                          },
                          { "type": "integer", "minimum": 1 }
                        ]
                      },
                      "weight": {
                        "description": "used to split traffic between differentupstreams for plugin configuration",
                        "minimum": 0,
                        "type": "integer",
                        "default": 1
                      }
                    }
                  },
                  "maxItems": 20,
                  "type": "array",
                  "default": [{ "weight": 1 }]
                },
                "match": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": { "vars": { "type": "array" } }
                  }
                }
              }
            }
          },
          "disable": { "type": "boolean" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "syslog": {
      "version": 0.1,
      "priority": 401,
      "schema": {
        "required": ["host", "port"],
        "properties": {
          "name": { "type": "string", "default": "http sys logger" },
          "host": { "type": "string" },
          "port": { "type": "integer" },
          "tls": { "type": "boolean", "default": false },
          "disable": { "type": "boolean" },
          "pool_size": { "minimum": 5, "type": "integer", "default": 5 },
          "timeout": { "minimum": 1, "type": "integer", "default": 3000 },
          "include_req_body": { "type": "boolean", "default": false },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "max_retry_times": { "type": "integer", "minimum": 1 },
          "retry_interval": { "type": "integer", "minimum": 0 },
          "flush_limit": { "minimum": 1, "type": "integer", "default": 4096 },
          "drop_limit": { "type": "integer", "default": 1048576 },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "sock_type": {
            "enum": ["tcp", "udp"],
            "type": "string",
            "default": "tcp"
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "datadog": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "port": { "minimum": 0, "type": "integer", "default": 8125 },
          "namespace": { "type": "string", "default": "apisix" },
          "host": { "type": "string", "default": "127.0.0.1" },
          "constant_tags": {
            "items": { "type": "string" },
            "type": "array",
            "default": ["source:apisix"]
          }
        }
      },
      "priority": 495,
      "schema": {
        "properties": {
          "name": { "type": "string", "default": "datadog" },
          "disable": { "type": "boolean" },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "prefer_name": { "type": "boolean", "default": true },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "proxy-control": {
      "version": 0.1,
      "priority": 21990,
      "schema": {
        "properties": {
          "disable": { "type": "boolean" },
          "request_buffering": { "type": "boolean", "default": true }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "azure-functions": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "master_clientid": { "type": "string", "default": "" },
          "master_apikey": { "type": "string", "default": "" }
        }
      },
      "priority": -1900,
      "schema": {
        "required": ["function_uri"],
        "properties": {
          "timeout": { "minimum": 100, "type": "integer", "default": 3000 },
          "keepalive_timeout": {
            "minimum": 1000,
            "type": "integer",
            "default": 60000
          },
          "disable": { "type": "boolean" },
          "keepalive_pool": { "minimum": 1, "type": "integer", "default": 5 },
          "ssl_verify": { "type": "boolean", "default": true },
          "keepalive": { "type": "boolean", "default": true },
          "authorization": {
            "type": "object",
            "properties": {
              "apikey": { "type": "string" },
              "clientid": { "type": "string" }
            }
          },
          "function_uri": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "server-info": {
      "version": 0.1,
      "priority": 990,
      "scope": "global",
      "schema": {
        "properties": { "disable": { "type": "boolean" } },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "splunk-hec-logging": {
      "version": 0.1,
      "priority": 409,
      "schema": {
        "required": ["endpoint"],
        "properties": {
          "name": { "type": "string", "default": "splunk-hec-logging" },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "disable": { "type": "boolean" },
          "endpoint": {
            "required": ["uri", "token"],
            "properties": {
              "token": { "type": "string" },
              "uri": {
                "type": "string",
                "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
              },
              "timeout": { "minimum": 1, "type": "integer", "default": 10 },
              "channel": { "type": "string" }
            },
            "type": "object"
          },
          "ssl_verify": { "type": "boolean", "default": true },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "authz-casbin": {
      "version": 0.1,
      "metadata_schema": {
        "required": ["model", "policy"],
        "properties": {
          "model": { "type": "string" },
          "policy": { "type": "string" }
        },
        "type": "object"
      },
      "priority": 2560,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "username": { "type": "string" },
          "policy": { "type": "string" },
          "model_path": { "type": "string" },
          "policy_path": { "type": "string" },
          "model": { "type": "string" },
          "disable": { "type": "boolean" }
        },
        "type": "object",
        "oneOf": [
          { "required": ["model_path", "policy_path", "username"] },
          { "required": ["model", "policy", "username"] }
        ]
      }
    },
    "ip-restriction": {
      "version": 0.1,
      "priority": 3000,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "message": {
            "maxLength": 1024,
            "default": "Your IP address is not allowed",
            "type": "string",
            "minLength": 1
          },
          "disable": { "type": "boolean" },
          "blacklist": {
            "minItems": 1,
            "type": "array",
            "items": {
              "anyOf": [
                { "title": "IPv4", "type": "string", "format": "ipv4" },
                {
                  "title": "IPv4/CIDR",
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                },
                { "title": "IPv6", "type": "string", "format": "ipv6" },
                {
                  "title": "IPv6/CIDR",
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                }
              ]
            }
          },
          "whitelist": {
            "minItems": 1,
            "type": "array",
            "items": {
              "anyOf": [
                { "title": "IPv4", "type": "string", "format": "ipv4" },
                {
                  "title": "IPv4/CIDR",
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                },
                { "title": "IPv6", "type": "string", "format": "ipv6" },
                {
                  "title": "IPv6/CIDR",
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                }
              ]
            }
          }
        },
        "type": "object",
        "oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }]
      }
    },
    "key-auth": {
      "version": 0.1,
      "type": "auth",
      "schema": {
        "properties": {
          "header": { "type": "string", "default": "apikey" },
          "query": { "type": "string", "default": "apikey" },
          "disable": { "type": "boolean" },
          "hide_credentials": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      },
      "consumer_schema": {
        "required": ["key"],
        "properties": { "key": { "type": "string" } },
        "type": "object"
      },
      "priority": 2500
    },
    "gzip": {
      "version": 0.1,
      "priority": 995,
      "schema": {
        "properties": {
          "min_length": { "minimum": 1, "type": "integer", "default": 20 },
          "comp_level": {
            "minimum": 1,
            "maximum": 9,
            "type": "integer",
            "default": 1
          },
          "vary": { "type": "boolean" },
          "types": {
            "anyOf": [
              {
                "minItems": 1,
                "type": "array",
                "items": { "type": "string", "minLength": 1 }
              },
              { "enum": ["*"] }
            ],
            "default": ["text/html"]
          },
          "buffers": {
            "properties": {
              "size": { "minimum": 1, "type": "integer", "default": 4096 },
              "number": { "minimum": 1, "type": "integer", "default": 32 }
            },
            "type": "object",
            "default": { "size": 4096, "number": 32 }
          },
          "http_version": { "enum": [1.1, 1], "default": 1.1 },
          "disable": { "type": "boolean" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "proxy-rewrite": {
      "version": 0.1,
      "priority": 1008,
      "schema": {
        "$comment": "this is a mark for our injected plugin schema",
        "properties": {
          "uri": {
            "type": "string",
            "minLength": 1,
            "description": "new uri for upstream",
            "pattern": "^\\/.*",
            "maxLength": 4096
          },
          "host": {
            "description": "new host for upstream",
            "type": "string",
            "pattern": "^[0-9a-zA-Z-.]+(:\\d{1,5})?$"
          },
          "scheme": {
            "description": "new scheme for upstream",
            "type": "string",
            "enum": ["http", "https"]
          },
          "regex_uri": {
            "minItems": 2,
            "type": "array",
            "description": "new uri that substitute from client uri for upstream, lower priority than uri property",
            "maxItems": 2,
            "items": { "description": "regex uri", "type": "string" }
          },
          "disable": { "type": "boolean" },
          "headers": {
            "description": "new headers for request",
            "type": "object",
            "minProperties": 1
          },
          "method": {
            "description": "proxy route method",
            "type": "string",
            "enum": [
              "LOCK",
              "UNLOCK",
              "PATCH",
              "TRACE",
              "GET",
              "HEAD",
              "POST",
              "PUT",
              "DELETE",
              "MKCOL",
              "COPY",
              "MOVE",
              "OPTIONS",
              "PROPFIND"
            ]
          }
        },
        "type": "object",
        "minProperties": 1
      }
    },
    "forward-auth": {
      "version": 0.1,
      "priority": 2002,
      "schema": {
        "required": ["uri"],
        "properties": {
          "timeout": {
            "maximum": 60000,
            "type": "integer",
            "minimum": 1,
            "description": "timeout in milliseconds",
            "default": 3000
          },
          "uri": { "type": "string" },
          "keepalive": { "type": "boolean", "default": true },
          "request_method": {
            "enum": ["GET", "POST"],
            "description": "the method for client to request the authorization service",
            "type": "string",
            "default": "GET"
          },
          "disable": { "type": "boolean" },
          "upstream_headers": {
            "description": "authorization response header that will be sent to the upstream",
            "items": { "type": "string" },
            "type": "array",
            "default": {}
          },
          "ssl_verify": { "type": "boolean", "default": true },
          "client_headers": {
            "description": "authorization response header that will be sent tothe client when authorizing failed",
            "items": { "type": "string" },
            "type": "array",
            "default": {}
          },
          "keepalive_timeout": {
            "minimum": 1000,
            "type": "integer",
            "default": 60000
          },
          "request_headers": {
            "description": "client request header that will be sent to the authorization service",
            "items": { "type": "string" },
            "type": "array",
            "default": {}
          },
          "keepalive_pool": { "minimum": 1, "type": "integer", "default": 5 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "prometheus": {
      "version": 0.2,
      "priority": 500,
      "schema": {
        "properties": {
          "disable": { "type": "boolean" },
          "prefer_name": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "mocking": {
      "version": 0.1,
      "priority": 10900,
      "schema": {
        "anyOf": [
          { "required": ["response_example"] },
          { "required": ["response_schema"] }
        ],
        "properties": {
          "content_type": {
            "type": "string",
            "default": "application/json;charset=utf8"
          },
          "with_mock_header": { "type": "boolean", "default": true },
          "disable": { "type": "boolean" },
          "delay": { "type": "integer", "default": 0 },
          "response_status": {
            "minimum": 100,
            "type": "integer",
            "default": 200
          },
          "response_schema": { "type": "object" },
          "response_example": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "proxy-mirror": {
      "version": 0.1,
      "priority": 1010,
      "schema": {
        "required": ["host"],
        "properties": {
          "disable": { "type": "boolean" },
          "sample_ratio": {
            "minimum": 1e-5,
            "maximum": 1,
            "type": "number",
            "default": 1
          },
          "host": {
            "type": "string",
            "pattern": "^http(s)?:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?$"
          },
          "path": { "type": "string", "pattern": "^/[^?&]+$" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "nivorbit-openid-connect": {
      "version": 0.1,
      "priority": 2699,
      "schema": {
        "required": [
          "client_id",
          "client_secret",
          "discovery",
          "token_exchange",
          "token_endpoint",
          "audience"
        ],
        "properties": {
          "introspection_endpoint": { "type": "string" },
          "introspection_endpoint_auth_method": {
            "type": "string",
            "default": "client_secret_basic"
          },
          "bearer_only": { "type": "boolean", "default": false },
          "realm": { "type": "string", "default": "apisix" },
          "logout_path": { "type": "string", "default": "/logout" },
          "post_logout_redirect_uri": {
            "type": "string",
            "description": "the URI will be redirect when request logout_path"
          },
          "disable": { "type": "boolean" },
          "public_key": { "type": "string" },
          "token_signing_alg_values_expected": { "type": "string" },
          "set_access_token_header": {
            "description": "Whether the access token should be added as a header to the request for downstream",
            "type": "boolean",
            "default": true
          },
          "access_token_in_authorization_header": {
            "description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header.",
            "type": "boolean",
            "default": false
          },
          "timeout": {
            "minimum": 1,
            "description": "timeout in seconds",
            "type": "integer",
            "default": 3
          },
          "set_id_token_header": {
            "description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream.",
            "type": "boolean",
            "default": true
          },
          "scope": { "type": "string", "default": "openid" },
          "client_id": { "type": "string" },
          "set_userinfo_header": {
            "description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream.",
            "type": "boolean",
            "default": true
          },
          "token_endpoint": {
            "description": "Token endpoint",
            "type": "string"
          },
          "audience": { "type": "string", "default": "" },
          "token_exchange": {
            "description": "Whether the token exchange enable. It will change current token with a new one",
            "type": "boolean",
            "default": false
          },
          "client_secret": { "type": "string" },
          "redirect_uri": {
            "type": "string",
            "description": "use ngx.var.request_uri if not configured"
          },
          "discovery": { "type": "string" },
          "set_refresh_token_header": {
            "description": "Whether the refresh token should be added in the X-Refresh-Token header to the request for downstream.",
            "type": "boolean",
            "default": false
          },
          "ssl_verify": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "ua-restriction": {
      "version": 0.1,
      "priority": 2999,
      "schema": {
        "properties": {
          "disable": { "type": "boolean" },
          "allowlist": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "string", "minLength": 1 }
          },
          "denylist": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "string", "minLength": 1 }
          },
          "bypass_missing": { "type": "boolean", "default": false },
          "message": {
            "maxLength": 1024,
            "default": "Not allowed",
            "type": "string",
            "minLength": 1
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "hmac-auth": {
      "version": 0.1,
      "type": "auth",
      "schema": {
        "title": "work with route or service object",
        "properties": { "disable": { "type": "boolean" } },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      },
      "consumer_schema": {
        "title": "work with consumer object",
        "properties": {
          "validate_request_body": {
            "title": "A boolean value telling the plugin to enable body validation",
            "type": "boolean",
            "default": false
          },
          "algorithm": {
            "enum": ["hmac-sha1", "hmac-sha256", "hmac-sha512"],
            "type": "string",
            "default": "hmac-sha256"
          },
          "max_req_body": {
            "title": "Max request body size",
            "type": "integer",
            "default": 524288
          },
          "secret_key": { "maxLength": 256, "type": "string", "minLength": 1 },
          "clock_skew": { "type": "integer", "default": 0 },
          "signed_headers": {
            "type": "array",
            "items": { "maxLength": 50, "type": "string", "minLength": 1 }
          },
          "keep_headers": {
            "title": "whether to keep the http request header",
            "type": "boolean",
            "default": false
          },
          "access_key": { "maxLength": 256, "type": "string", "minLength": 1 },
          "encode_uri_params": {
            "title": "Whether to escape the uri parameter",
            "type": "boolean",
            "default": true
          }
        },
        "type": "object",
        "required": ["access_key", "secret_key"]
      },
      "priority": 2530
    },
    "ldap-auth": {
      "version": 0.1,
      "type": "auth",
      "schema": {
        "title": "work with route or service object",
        "type": "object",
        "properties": {
          "disable": { "type": "boolean" },
          "base_dn": { "type": "string" },
          "ldap_uri": { "type": "string" },
          "use_tls": { "type": "boolean" },
          "uid": { "type": "string" }
        },
        "required": ["base_dn", "ldap_uri"],
        "$comment": "this is a mark for our injected plugin schema"
      },
      "consumer_schema": {
        "title": "work with consumer object",
        "properties": { "user_dn": { "type": "string" } },
        "type": "object",
        "required": ["user_dn"]
      },
      "priority": 2540
    },
    "jwt-auth": {
      "version": 0.1,
      "type": "auth",
      "schema": {
        "properties": {
          "header": { "type": "string", "default": "authorization" },
          "query": { "type": "string", "default": "jwt" },
          "disable": { "type": "boolean" },
          "cookie": { "type": "string", "default": "jwt" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      },
      "consumer_schema": {
        "dependencies": {
          "algorithm": {
            "oneOf": [
              {
                "properties": {
                  "algorithm": {
                    "enum": ["HS256", "HS512"],
                    "default": "HS256"
                  }
                }
              },
              {
                "required": ["public_key", "private_key"],
                "properties": {
                  "algorithm": { "enum": ["RS256"] },
                  "public_key": { "type": "string" },
                  "private_key": { "type": "string" }
                }
              },
              {
                "required": ["vault"],
                "properties": {
                  "algorithm": { "enum": ["RS256"] },
                  "vault": { "type": "object", "properties": {} }
                }
              }
            ]
          }
        },
        "properties": {
          "exp": { "minimum": 1, "type": "integer", "default": 86400 },
          "algorithm": {
            "enum": ["HS256", "HS512", "RS256"],
            "type": "string",
            "default": "HS256"
          },
          "secret": { "type": "string" },
          "vault": { "type": "object", "properties": {} },
          "base64_secret": { "type": "boolean", "default": false },
          "key": { "type": "string" }
        },
        "type": "object",
        "required": ["key"]
      },
      "priority": 2510
    },
    "real-ip": {
      "version": 0.1,
      "priority": 23000,
      "schema": {
        "required": ["source"],
        "properties": {
          "trusted_addresses": {
            "minItems": 1,
            "type": "array",
            "items": {
              "anyOf": [
                { "title": "IPv4", "type": "string", "format": "ipv4" },
                {
                  "title": "IPv4/CIDR",
                  "type": "string",
                  "pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$"
                },
                { "title": "IPv6", "type": "string", "format": "ipv6" },
                {
                  "title": "IPv6/CIDR",
                  "type": "string",
                  "pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$"
                }
              ]
            }
          },
          "disable": { "type": "boolean" },
          "recursive": { "type": "boolean", "default": false },
          "source": { "type": "string", "minLength": 1 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "skywalking-logger": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            }
          }
        }
      },
      "priority": 408,
      "schema": {
        "required": ["endpoint_addr"],
        "properties": {
          "name": { "type": "string", "default": "skywalking logger" },
          "include_req_body": { "type": "boolean", "default": false },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "service_name": { "type": "string", "default": "APISIX" },
          "service_instance_name": {
            "type": "string",
            "default": "APISIX Instance Name"
          },
          "disable": { "type": "boolean" },
          "timeout": { "minimum": 1, "type": "integer", "default": 3 },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "endpoint_addr": {
            "type": "string",
            "pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?"
          },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "sls-logger": {
      "version": 0.1,
      "priority": 406,
      "schema": {
        "required": [
          "host",
          "port",
          "project",
          "logstore",
          "access_key_id",
          "access_key_secret"
        ],
        "properties": {
          "timeout": { "minimum": 1, "type": "integer", "default": 5000 },
          "include_req_body": { "type": "boolean", "default": false },
          "host": { "type": "string" },
          "port": { "type": "integer" },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "project": { "type": "string" },
          "logstore": { "type": "string" },
          "access_key_id": { "type": "string" },
          "access_key_secret": { "type": "string" },
          "disable": { "type": "boolean" },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "name": { "type": "string", "default": "sls-logger" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "ext-plugin-post-req": {
      "version": 0.1,
      "priority": -3000,
      "schema": {
        "properties": {
          "conf": {
            "minItems": 1,
            "type": "array",
            "items": {
              "required": ["name", "value"],
              "properties": {
                "name": { "maxLength": 128, "type": "string", "minLength": 1 },
                "value": { "type": "string" }
              },
              "type": "object"
            }
          },
          "disable": { "type": "boolean" },
          "allow_degradation": { "type": "boolean", "default": false }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "kafka-logger": {
      "version": 0.1,
      "metadata_schema": {
        "type": "object",
        "properties": {
          "log_format": {
            "type": "object",
            "default": {
              "@timestamp": "$time_iso8601",
              "host": "$host",
              "client_ip": "$remote_addr"
            }
          }
        }
      },
      "priority": 403,
      "schema": {
        "required": ["broker_list", "kafka_topic"],
        "properties": {
          "name": { "type": "string", "default": "kafka logger" },
          "meta_format": {
            "enum": ["default", "origin"],
            "type": "string",
            "default": "default"
          },
          "disable": { "type": "boolean" },
          "kafka_topic": { "type": "string" },
          "broker_list": {
            "patternProperties": {
              ".*": {
                "description": "the port of kafka broker",
                "maximum": 65535,
                "type": "integer",
                "minimum": 1
              }
            },
            "type": "object",
            "minProperties": 1
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "required_acks": {
            "enum": [0, 1, -1],
            "type": "integer",
            "default": 1
          },
          "cluster_name": { "minimum": 1, "type": "integer", "default": 1 },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "key": { "type": "string" },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "include_req_body": { "type": "boolean", "default": false },
          "timeout": { "minimum": 1, "type": "integer", "default": 3 },
          "include_resp_body_expr": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "array" }
          },
          "include_req_body_expr": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "array" }
          },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "include_resp_body": { "type": "boolean", "default": false },
          "producer_type": {
            "enum": ["async", "sync"],
            "type": "string",
            "default": "async"
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "grpc-transcode": {
      "version": 0.1,
      "priority": 506,
      "schema": {
        "required": ["proto_id", "service", "method"],
        "additionalProperties": true,
        "type": "object",
        "properties": {
          "deadline": {
            "description": "deadline for grpc, millisecond",
            "type": "number",
            "default": 0
          },
          "service": {
            "description": "the grpc service name",
            "type": "string"
          },
          "pb_option": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "description": "enum as result",
                  "type": "string",
                  "enum": [
                    "int64_as_number",
                    "int64_as_string",
                    "int64_as_hexstring"
                  ]
                },
                {
                  "description": "int64 as result",
                  "type": "string",
                  "enum": ["enum_as_name", "enum_as_value"]
                },
                {
                  "description": "default values option",
                  "type": "string",
                  "enum": [
                    "auto_default_values",
                    "no_default_values",
                    "use_default_values",
                    "use_default_metatable"
                  ]
                },
                {
                  "description": "hooks option",
                  "type": "string",
                  "enum": ["enable_hooks", "disable_hooks"]
                }
              ]
            }
          },
          "proto_id": {
            "anyOf": [
              {
                "maxLength": 64,
                "pattern": "^[a-zA-Z0-9-_.]+$",
                "type": "string",
                "minLength": 1
              },
              { "type": "integer", "minimum": 1 }
            ]
          },
          "disable": { "type": "boolean" },
          "method": {
            "description": "the method name in the grpc service.",
            "type": "string"
          }
        },
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "grpc-web": {
      "version": 0.1,
      "priority": 505,
      "schema": {
        "properties": { "disable": { "type": "boolean" } },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "proxy-cache": {
      "version": 0.2,
      "priority": 1009,
      "schema": {
        "properties": {
          "hide_cache_headers": { "type": "boolean", "default": false },
          "cache_control": { "type": "boolean", "default": false },
          "cache_bypass": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
            }
          },
          "no_cache": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
            }
          },
          "cache_zone": {
            "maxLength": 100,
            "default": "disk_cache_one",
            "type": "string",
            "minLength": 1
          },
          "cache_strategy": {
            "enum": ["disk", "memory"],
            "type": "string",
            "default": "disk"
          },
          "cache_key": {
            "items": {
              "description": "a key for caching",
              "type": "string",
              "pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)"
            },
            "minItems": 1,
            "type": "array",
            "default": ["$host", "$request_uri"]
          },
          "cache_ttl": { "minimum": 1, "type": "integer", "default": 300 },
          "cache_http_status": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "description": "http response status",
              "maximum": 599,
              "type": "integer",
              "minimum": 200
            },
            "default": [200, 301, 404]
          },
          "disable": { "type": "boolean" },
          "cache_method": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "description": "supported http method",
              "type": "string",
              "enum": ["GET", "POST", "HEAD"]
            },
            "default": ["GET", "HEAD"]
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "serverless-post-function": {
      "version": 0.1,
      "priority": -2000,
      "schema": {
        "required": ["functions"],
        "properties": {
          "functions": {
            "minItems": 1,
            "type": "array",
            "items": { "type": "string" }
          },
          "disable": { "type": "boolean" },
          "phase": {
            "enum": [
              "rewrite",
              "access",
              "header_filter",
              "body_filter",
              "log",
              "before_proxy"
            ],
            "type": "string",
            "default": "access"
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "udp-logger": {
      "version": 0.1,
      "priority": 400,
      "schema": {
        "required": ["host", "port"],
        "properties": {
          "timeout": { "minimum": 1, "type": "integer", "default": 3 },
          "include_req_body": { "type": "boolean", "default": false },
          "host": { "type": "string" },
          "port": { "type": "integer", "minimum": 0 },
          "retry_delay": { "minimum": 0, "type": "integer", "default": 1 },
          "batch_max_size": {
            "minimum": 1,
            "type": "integer",
            "default": 1000
          },
          "max_retry_count": { "minimum": 0, "type": "integer", "default": 0 },
          "buffer_duration": { "minimum": 1, "type": "integer", "default": 60 },
          "disable": { "type": "boolean" },
          "inactive_timeout": { "minimum": 1, "type": "integer", "default": 5 },
          "name": { "type": "string", "default": "udp logger" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "example-plugin": {
      "version": 0.1,
      "metadata_schema": {
        "required": ["ikey", "skey"],
        "properties": {
          "ikey": { "type": "number", "minimum": 0 },
          "skey": { "type": "string" }
        },
        "type": "object"
      },
      "priority": 0,
      "schema": {
        "required": ["i"],
        "properties": {
          "ip": { "type": "string" },
          "t": { "type": "array", "minItems": 1 },
          "i": { "type": "number", "minimum": 0 },
          "disable": { "type": "boolean" },
          "port": { "type": "integer" },
          "s": { "type": "string" }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    },
    "api-breaker": {
      "version": 0.1,
      "priority": 1005,
      "schema": {
        "required": ["break_response_code"],
        "properties": {
          "max_breaker_sec": {
            "minimum": 3,
            "type": "integer",
            "default": 300
          },
          "disable": { "type": "boolean" },
          "healthy": {
            "properties": {
              "http_statuses": {
                "minItems": 1,
                "uniqueItems": true,
                "type": "array",
                "items": { "minimum": 200, "type": "integer", "maximum": 499 },
                "default": [200]
              },
              "successes": { "minimum": 1, "type": "integer", "default": 3 }
            },
            "type": "object",
            "default": { "http_statuses": [200], "successes": 3 }
          },
          "unhealthy": {
            "properties": {
              "http_statuses": {
                "minItems": 1,
                "uniqueItems": true,
                "type": "array",
                "items": { "minimum": 500, "type": "integer", "maximum": 599 },
                "default": [500]
              },
              "failures": { "minimum": 1, "type": "integer", "default": 3 }
            },
            "type": "object",
            "default": { "http_statuses": [500], "failures": 3 }
          },
          "break_response_code": {
            "minimum": 200,
            "type": "integer",
            "maximum": 599
          },
          "break_response_body": { "type": "string" },
          "break_response_headers": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "value": { "type": "string", "minLength": 1 },
                "key": { "type": "string", "minLength": 1 }
              }
            }
          }
        },
        "type": "object",
        "$comment": "this is a mark for our injected plugin schema"
      }
    }
  }
}